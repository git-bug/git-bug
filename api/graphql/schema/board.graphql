type Board
@goModel(model: "github.com/git-bug/git-bug/api/graphql/models.BoardWrapper") {

    """The identifier for this board"""
    id: ID!
    """The human version (truncated) identifier for this board"""
    humanId: String!

    createdAt: Time!
    lastEdit: Time!

    title: String!
    description: String!

    columns(
        """Returns the elements in the list that come after the specified cursor."""
        after: String
        """Returns the elements in the list that come before the specified cursor."""
        before: String
        """Returns the first _n_ elements from the list."""
        first: Int
        """Returns the last _n_ elements from the list."""
        last: Int
    ): BoardColumnConnection!

    """The actors of the board. Actors are Identity that have interacted with the board."""
    actors(
        """Returns the elements in the list that come after the specified cursor."""
        after: String
        """Returns the elements in the list that come before the specified cursor."""
        before: String
        """Returns the first _n_ elements from the list."""
        first: Int
        """Returns the last _n_ elements from the list."""
        last: Int
    ): IdentityConnection!

    operations(
        """Returns the elements in the list that come after the specified cursor."""
        after: String
        """Returns the elements in the list that come before the specified cursor."""
        before: String
        """Returns the first _n_ elements from the list."""
        first: Int
        """Returns the last _n_ elements from the list."""
        last: Int
    ): OperationConnection!
}

"""The connection type for Board."""
type BoardConnection {
    """A list of edges."""
    edges: [BoardEdge!]!
    nodes: [Board!]!
    """Information to aid in pagination."""
    pageInfo: PageInfo!
    """Identifies the total count of items in the connection."""
    totalCount: Int!
}

"""An edge in a connection."""
type BoardEdge {
    """A cursor for use in pagination."""
    cursor: String!
    """The item at the end of the edge."""
    node: Board!
}
