{"author":{"id":"3998add589f6a09cf4bdf0e85e5481d2c48b8a757edd699a79a0c929ab5005db"},"ops":[{"type":1,"timestamp":1581772166,"nonce":"WC1praOYMocHz4rDvVIlk2Ty5YY=","metadata":{"github-id":"MDU6SXNzdWU1NjU3NDYwNzA=","github-url":"https://github.com/git-bug/git-bug/issues/327","origin":"github"},"title":"bridges: better credentials management","message":"Excerpt of the discussion:\n\nNice find, I had no idea it existed. Using real secret store instead of the git config is definitely a nice thing to have.\n\nToying a bit with that thing, I found that:\n1. it's a way to interact with user-specified secret storage\n1. if no credential helper is configured (virtually 100% of users) it default to a one off prompt. Nothing is stored, even between git invocation.\n1. a cache system exist (need to be configured) to store credential in memory in between git invocation\n1. a storage system exist (need to be configured) to store credential in a clear-text file\n1. the expressiveness of this credential system is highly coupled with what git know: URLs, login, password. Storing tokens or metadata is kinda hacky.\n\nSo, what I derive from that is:\n- this system is deeply tied to what git understand but could be abused for our needs. A standardized way to talk to a secret store is neat, especially as it could require no git-bug specific configuration.\n- instead of being a new kind of credential (token, password, login/password), this would really be a new way to store credentials for the credential system\n- credential's metadata can keep being stored in the git config. Shoehorning those into the git credential system seems a bit too much\n- in term of UX, an explicit choice between the git config and this more secure system is not required each time a credential is stored. It seems ok to me to use that better system if available and default to the git config if not. It may cause problems though if this system become unavailable and credentials are left in an incoherent state.\n\nDoes that sounds reasonable to you ? If so I'll merge my branch and we can add this feature later as it's orthogonal to everything else. Only the storage functions will be impacted.\n\n_Originally posted by @MichaelMure in https://github.com/MichaelMure/git-bug/pull/324#issuecomment-586239255_","files":null}]}