{"author":{"id":"3998add589f6a09cf4bdf0e85e5481d2c48b8a757edd699a79a0c929ab5005db"},"ops":[{"type":2,"timestamp":1551777270,"nonce":"L7GR5IqB59SypaC/yAKVY9hI2bI=","metadata":{"github-id":"MDE3OlJlbmFtZWRUaXRsZUV2ZW50MjE4MDMzNTA5NA=="},"title":"data model backward incompatibility","was":"data model backward incompatibility in v0.3.0"},{"type":5,"timestamp":1551777281,"nonce":"iRD2y8CGAaSrCp9WxuIyxPoW/nY=","metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDIxODAzMzU1ODg="},"added":["kind/bug"],"removed":[]},{"type":3,"timestamp":1551779607,"nonce":"dco9rUItCPgEJUY076AKdL0xdRk=","metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQ2OTYxNTE0Nw==","github-url":"https://github.com/git-bug/git-bug/issues/101#issuecomment-469615147"},"message":"I had a look at this issue. I didn't realize that you were using such a early version ...\n\nSo what is happening is that I changed the data model format in version [0.3.0](https://github.com/MichaelMure/git-bug/releases/tag/0.3.0) back in september, to use JSON instead of the go-only gob serialization format. Here is the issue as to why: https://github.com/MichaelMure/git-bug/issues/5\n\nDue to the very early nature of the project at that time (it was basically a prototype)I considered that I could make breaking changes for the sake of pushing the project forward. Hopefully you understand. The project right now is in a much better shape. The last updates introduced a radical changes in how identities are stored in the data model, while still being backward compatible, so I have good hopes that there will be no more data model breakage and that the 1.0 version, where I can actually guarantee that users can safely rely on git-bug, is not far away.\n\nSo, in short, there is no automated migration path available for this change. The best solution that I can give you would be to use an old binary to read your old bugs, and use a new one to insert them in the new format using copy/pastes. \n\nNow a problem you will have is that you can't run both version on the same repo, and the new version will fail to start properly if you have bugs considered invalid in your database. So you will need to copy you repository and clean all the bugs data to get a clean repo where you can run the new version. To remove all the bugs, you can run the following commands:\n\n```\n\tgit for-each-ref refs/bugs/ | cut -f 2 | xargs -r -n 1 git update-ref -d\n\tgit for-each-ref refs/remotes/origin/bugs/ | cut -f 2 | xargs -r -n 1 git update-ref -d\n ```\n\nIf there is still an error, you can also delete the `.git/git-bug` folder.\n\nSorry for the inconvenience :-|","files":null},{"type":6,"timestamp":1551779655,"nonce":"mw5IFzTefJJULxeblZOEPM+nJUo=","metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDE5MjA5NDcxMQ=="},"target":"ca04f8878442e305ca46c8a9a97bf8440b1e0e48ae1c931822008ba01bdc0471","message":"I had a look at this issue. I didn't realize that you were using such a early version ...\n\nSo what is happening is that I changed the data model format in version [0.3.0](https://github.com/MichaelMure/git-bug/releases/tag/0.3.0) back in september, to use JSON instead of the go-only gob serialization format. Here is the issue as to why: https://github.com/MichaelMure/git-bug/issues/5\n\nDue to the very early nature of the project at that time (it was basically a prototype)I considered that I could make breaking changes for the sake of pushing the project forward. Hopefully you understand. The project right now is in a much better shape. The last updates introduced a radical changes in how identities are stored in the data model, while still being backward compatible, so I have good hopes that there will be no more data model breakage and that the 1.0 version, where I can actually guarantee that users can safely rely on git-bug, is not far away.\n\nSo, in short, there is no automated migration path available for this change. The best solution that I can give you would be to use an old binary to read your old bugs, and use a new one to insert them in the new format using copy/pastes. \n\nNow a problem you will have is that you can't run both version on the same repo, and the new version will fail to start properly if you have bugs considered invalid in your database. So you will need to copy you repository and clean all the bugs data to get a clean repo where you can run the new version. To remove all the bugs, you can run the following commands:\n\n```\ngit for-each-ref refs/bugs/ | cut -f 2 | xargs -r -n 1 git update-ref -d\ngit for-each-ref refs/remotes/origin/bugs/ | cut -f 2 | xargs -r -n 1 git update-ref -d\n ```\n\nIf there is still an error, you can also delete the `.git/git-bug` folder.\n\nSorry for the inconvenience :-|","files":null},{"type":5,"timestamp":1551779621,"nonce":"02gYUPEsPzbQDCdFhNwFRSDedis=","metadata":{"github-id":"MDE0OlVubGFiZWxlZEV2ZW50MjE4MDQ0MTQyNQ=="},"added":[],"removed":["kind/bug"]},{"type":2,"timestamp":1551779638,"nonce":"pPt0KgYcz8+M3Ri4OxBrL2e+XFg=","metadata":{"github-id":"MDE3OlJlbmFtZWRUaXRsZUV2ZW50MjE4MDQ0MjI0NA=="},"title":"data model backward incompatibility in v0.3.0","was":"data model backward incompatibility"},{"type":4,"timestamp":1551972841,"nonce":"3fSNY65lT3SqBQ5eY2XNV4wh9s8=","metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50MjE4NzU3OTg2OQ=="},"status":2}]}