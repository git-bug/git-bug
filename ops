{"author":{"id":"3998add589f6a09cf4bdf0e85e5481d2c48b8a757edd699a79a0c929ab5005db"},"ops":[{"type":3,"timestamp":1722851991,"nonce":"Hd84XCYk66n+VaAIy9bw8hYeSWE=","metadata":{"github-id":"IC_kwDOCGKeh86HOVNx","github-url":"https://github.com/git-bug/git-bug/issues/1227#issuecomment-2268681073"},"message":"Imho, while the intention makes sense (I do agree on making the development more permission-less and disconnected from the core), actually splitting the bridges into separate binaries would be a massive effort, with little benefit. This is because the interfacing required between the bridges and git-bug core is massive:\n- auth methods: https://github.com/MichaelMure/git-bug/tree/master/bridge/core/auth\n- pretty much all bridge core, to define a bridge, import/export events, common CLI/UI parameters : https://github.com/MichaelMure/git-bug/tree/master/bridge/core\n- a subset of the repository interfaces (keyring, `Common`)\n- all the entities to manipulate (bug, ...)\n- the full \"caching\" layer and its higher level API\n- all the \"library\" code for the UIs: https://github.com/MichaelMure/git-bug/tree/master/commands/input or https://github.com/MichaelMure/git-bug/tree/master/util/text\n\nAll this is roughly 2/3 of git-bug core, and it's going to be close to impossible to reduce that ratio, because bridges by nature needs not only a wide range of features, but often more specialized than usual (for example, specifying a date of an event rather than using Now()). Please note: I've been trying to well define and reduce the APIs scopes, reduce coupling and so on already.\n\nMy advice would be to split the bridges into different codebase in the git-bug org (or elsewhere if someone wants to start it on its own). This gives you all the upsides you are looking for, yet requires very little work.\n\nFor importing the bridges, I'd simply statically import the bridges as go modules, but if you want something more configurable, you could have a list in a file where people could add/remove what they want, and a `go:generate` rule to generate the corresponding import.\n\nIn any case, I think it's really important to ship the quality bridges (github, gitlab, jira) by default. Git-bug should be a one stop binary that gives you the tool you need for your project. I don't see the point of shipping without those most important bridges.","files":null},{"type":3,"timestamp":1722852597,"nonce":"uEmuWa1lTRn99xrSdiqSMAnvNQA=","metadata":{"github-id":"IC_kwDOCGKeh86HOaXL","github-url":"https://github.com/git-bug/git-bug/issues/1227#issuecomment-2268702155"},"message":"Note: this kind of import exist for example here: https://github.com/ipfs/kubo/blob/master/plugin/loader/preload_list, but it could be made quite simpler for git-bug.","files":null}]}