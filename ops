{"author":{"id":"4d85ccdde3ad47c902de21b580354b67ed0cb07caa04e32d04ea93112f7f027e"},"ops":[{"type":3,"timestamp":1743954950,"nonce":"JLdlg9PCLjpCEc0b1iWGrCWq0bg=","metadata":{"github-id":"IC_kwDOCGKeh86lyiOY","github-url":"https://github.com/git-bug/git-bug/issues/1335#issuecomment-2781488024"},"message":"\u003e I donâ€™t have `gopass` installed\n\nðŸ¤¦ i totally meant `git-bug`. my fingers hit `g`, and some part of my brain told them to autocomplete the completely wrong program. my bad!\n\n\u003e It looks like this issue stems from limitations in go-git, which git-bug relies on\n\nyeah, `go-git/go-git` is sort of the canonical implementation of libgit2 in golang.\n\n\u003e Given that there's little hope go-git will support parsing ~/.ssh/config anytime soon, would it be possible for git-bug to offer an option to use the system git binary for remote interactions (e.g., as a build-time option or fallback)?\n\u003e\n\u003e That would solve this kind of issue without waiting on upstream go-git changes.\n\nresolving issues like this will be a focus for me after the `0.8.1` (maintenance) release. there isn't a current plan for how to tackle this, but i think forking out to `git` may be a reasonable approach. i personally use ssh heavily, and this will need to get solved :)\n\n---\n\nin the meantime, you should be able to accomplish this by changing your git configuration. the following two commands should change the remote URI and the command git uses to execute `ssh` in a way that emulates the configuration you provided:\n\n```\n$ git remote set-url origin git@8.8.8.8:my-project\n\n\n$ git config --local core.sshcommand \"ssh -i ~/.ssh/dev@lab -p 4242\"\n```","files":null},{"type":6,"timestamp":1743955299,"nonce":"/IVDY+Rn1jZ8BIx1l+E/fju/A/c=","metadata":{"github-id":"UCE_lALOCGKeh86lyiOYzmJuAVM"},"target":"8d7f1bc5562bc3166520d367c2a863826f117341500e86beb0e833ba144a7a9f","message":"\u003e I donâ€™t have `gopass` installed\n\nðŸ¤¦ i totally meant `git-bug`. my fingers hit `g`, and some part of my brain told them to autocomplete the completely wrong program. my bad!\n\n\u003e It looks like this issue stems from limitations in go-git, which git-bug relies on\n\nyeah, `go-git/go-git` is sort of the canonical implementation of git in golang.\n\n\u003e Given that there's little hope go-git will support parsing ~/.ssh/config anytime soon, would it be possible for git-bug to offer an option to use the system git binary for remote interactions (e.g., as a build-time option or fallback)?\n\u003e\n\u003e That would solve this kind of issue without waiting on upstream go-git changes.\n\nresolving issues like this will be a focus for me after the `0.8.1` (maintenance) release. there isn't a current plan for how to tackle this, but i think forking out to `git` may be a reasonable approach, but there are a few alternatives that will be considered. i personally use ssh heavily, and this will need to get solved :)\n\n---\n\nin the meantime, you should be able to accomplish this by changing your git configuration. the following two commands should change the remote URI and the command git uses to execute `ssh` in a way that emulates the configuration you provided:\n\n```\n$ git remote set-url origin git@8.8.8.8:my-project\n\n$ git config --local core.sshcommand \"ssh -i ~/.ssh/dev@lab -p 4242\"\n```","files":null},{"type":6,"timestamp":1743960559,"nonce":"kwvbEAEmDxOrkaxJ9HASIIiToks=","metadata":{"github-id":"UCE_lALOCGKeh86lyiOYzmJuhSI"},"target":"8d7f1bc5562bc3166520d367c2a863826f117341500e86beb0e833ba144a7a9f","message":"\u003e I donâ€™t have `gopass` installed\n\nðŸ¤¦ i totally meant `git-bug`. my fingers hit `g`, and some part of my brain told them to autocomplete the completely wrong program. my bad!\n\n\u003e It looks like this issue stems from limitations in go-git, which git-bug relies on\n\nyeah, `go-git/go-git` is sort of the canonical implementation of git in golang.\n\n\u003e Given that there's little hope go-git will support parsing ~/.ssh/config anytime soon, would it be possible for git-bug to offer an option to use the system git binary for remote interactions (e.g., as a build-time option or fallback)?\n\u003e\n\u003e That would solve this kind of issue without waiting on upstream go-git changes.\n\nresolving issues like this will be a focus for me after the `0.8.1` (maintenance) release. there isn't a current plan for how to tackle this, but i think forking out to `git` may be a reasonable approach, but there are a few alternatives that will be considered. i personally use ssh heavily, and this will need to get solved :)\n\n---\n\nin the meantime, you should be able to accomplish this by changing your git configuration. the following two commands should change the remote URI and the command git uses to execute `ssh` in a way that emulates the configuration you provided:\n\n```\n$ git remote set-url origin git@8.8.8.8:my-project\n\n$ git config --local core.sshcommand \"ssh -i ~/.ssh/dev@lab -p 4242\"\n```\n\nupon further testing, `go-git` doesn't appear to support `core.sshcommand` either. _le sigh..._. i also tested with the latest release of `go-git`, and it still fails these use cases.","files":null},{"type":6,"timestamp":1743963040,"nonce":"askiCdnM9c8GnsSkKOK76d47ySs=","metadata":{"github-id":"UCE_lALOCGKeh86lyiOYzmJuxE8"},"target":"8d7f1bc5562bc3166520d367c2a863826f117341500e86beb0e833ba144a7a9f","message":"\u003e I donâ€™t have `gopass` installed\n\nðŸ¤¦ i totally meant `git-bug`. my fingers hit `g`, and some part of my brain told them to autocomplete the completely wrong program. my bad!\n\n\u003e It looks like this issue stems from limitations in go-git, which git-bug relies on\n\nyeah, `go-git/go-git` is sort of the canonical implementation of git in golang.\n\n\u003e Given that there's little hope go-git will support parsing ~/.ssh/config anytime soon, would it be possible for git-bug to offer an option to use the system git binary for remote interactions (e.g., as a build-time option or fallback)?\n\u003e\n\u003e That would solve this kind of issue without waiting on upstream go-git changes.\n\nresolving issues like this will be a focus for me after the `0.8.1` (maintenance) release. there isn't a current plan for how to tackle this, but i think forking out to `git` may be a reasonable approach, but there are a few alternatives that will be considered. i personally use ssh heavily, and this will need to get solved :)\n\n---\n\nin the meantime, you should be able to accomplish this by changing your git configuration. the following two commands should change the remote URI and the command git uses to execute `ssh` in a way that emulates the configuration you provided:\n\n```\n$ git remote set-url origin git@8.8.8.8:my-project\n\n$ git config --local core.sshcommand \"ssh -i ~/.ssh/dev@lab -p 4242\"\n```\n\n---\n\nupon further testing, `go-git` doesn't appear to support `core.sshcommand` either. _le sigh..._. i also tested with the latest release of `go-git`, and it still fails these use cases.\n\n---\n\nupon even more testing and research, it appears that the way go-git is written expects you (or `git-bug` in this case) to detect and customize the transport layer and options from git configuration manually. because of the variance in how users set up their git (and in this case, ssh) configuration, this can get unweildly. i'll explore this route more in the future, but simply forking out to `git` on the host system would be a simple way to do this without reinventing the wheel.","files":null},{"type":6,"timestamp":1743963249,"nonce":"sPxCTirWiNnmLQyOgJ4AQWOyn98=","metadata":{"github-id":"UCE_lALOCGKeh86lyiOYzmJuycM"},"target":"8d7f1bc5562bc3166520d367c2a863826f117341500e86beb0e833ba144a7a9f","message":"\u003e I donâ€™t have `gopass` installed\n\nðŸ¤¦ i totally meant `git-bug`. my fingers hit `g`, and some part of my brain told them to autocomplete the completely wrong program. my bad!\n\n\u003e It looks like this issue stems from limitations in go-git, which git-bug relies on\n\nyeah, `go-git/go-git` is sort of the canonical implementation of git in golang.\n\n\u003e Given that there's little hope go-git will support parsing ~/.ssh/config anytime soon, would it be possible for git-bug to offer an option to use the system git binary for remote interactions (e.g., as a build-time option or fallback)?\n\u003e\n\u003e That would solve this kind of issue without waiting on upstream go-git changes.\n\nresolving issues like this will be a focus for me after the `0.8.1` (maintenance) release. there isn't a current plan for how to tackle this, but i think forking out to `git` may be a reasonable approach, but there are a few alternatives that will be considered. i personally use ssh heavily, and this will need to get solved :)\n\n---\n\nin the meantime, you should be able to accomplish this by changing your git configuration. the following two commands should change the remote URI and the command git uses to execute `ssh` in a way that emulates the configuration you provided:\n\n```\n$ git remote set-url origin git@8.8.8.8:my-project\n\n$ git config --local core.sshcommand \"ssh -i ~/.ssh/dev@lab -p 4242\"\n```\n\n---\n\nupon further testing, `go-git` doesn't appear to support `core.sshcommand` either. _le sigh..._. i also tested with the latest release of `go-git`, and it still fails these use cases.\n\n---\n\nupon even more testing and research, it appears that the way go-git is written expects you (or `git-bug` in this case) to detect and customize the transport layer and options from git configuration manually. because of the variance in how users set up their git (and in this case, ssh) configuration, this can get unweildy. i'll explore this route more in the future, but simply forking out to `git` on the host system would be a simple way to do this without reinventing the wheel.","files":null}]}