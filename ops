{"author":{"id":"4d85ccdde3ad47c902de21b580354b67ed0cb07caa04e32d04ea93112f7f027e"},"ops":[{"type":3,"timestamp":1747154298,"nonce":"Nev+slzixH8d5b7C0Z3TjGBGNLI=","metadata":{"github-id":"IC_kwDOCGKeh86rf0ZA","github-url":"https://github.com/git-bug/git-bug/issues/1416#issuecomment-2877244992"},"message":"\u003e Git does not give me those prompts, I can pull and push without having to authenticate each time.\n\nyou **have to have configured your credentials somewhere**. it'd be normal to use git's `credential.helper` for http authentication like this, but like i said, go-git (and thus, git-bug) does not support re-using this.\n\n\u003e The second option does not work. It gives me this error\n\u003e\n\u003e ```\n\u003e Error: error creating SSH agent: \"SSH agent requested, but could not detect Pageant or Windows native SSH agent\"\n\u003e ```\n\u003e\n\u003e It happens in both CLI and termui. In CLI I used git bug push origin and git bug pull origin with the recommended configuration with SSH.\n\ngit-bug currently requires that an ssh agent is running (e.g. in linux/macos, `eval $(ssh-agent)`, and requires that the `SSH_AUTH_SOCK` environment variable is set. based on the error you got, i am assuming that you didn't have an agent running.\n\n\n\u003e I then tried the first option.\n\u003e \n\u003e This first option works for git bug push origin2 and git bug pull origin2 where origin2 is a new remote with the corresponding configuration. If I drop the origin2 remote en both commands, then it does not work, but I don't know if these commands are intended to work if I do not give them remotes explicitly. In TUI push and pull do not work and give the same error as in the second option. Maybe this happens because I cannot explicitly pick in TUI which remote I want to use.\n\u003e \n\u003e I can push and pull normally from/to my repo using just git with both options.\n\nthis is a known issue. on the CLI, you can specify the remote you want to push to or pull from:\n\nhttps://github.com/git-bug/git-bug/blob/bd936650ccf44ca33cf9c8bf553fe090534d2ab3/commands/push.go#L31-L34\n\nbut in the TUI, the remote is not (yet) configurable, and always tries to interact with `origin`. if you **change the `origin` remote to embed the token in the URI**, git-bug's TUI will be able to push and pull for you without issue.","files":null},{"type":6,"timestamp":1747155121,"nonce":"ReYK5A6ZTSJhMCImXHPr9BQ/qiE=","metadata":{"github-id":"UCE_lALOCGKeh86rf0ZAzmbMVBs"},"target":"a635e44bec4cf97cc2f90c781560cbf15dd88c86abb7be2d37f1c33b94339d61","message":"\u003e Git does not give me those prompts, I can pull and push without having to authenticate each time.\n\nyou **have to have configured your credentials somewhere**. it'd be normal to use git's `credential.helper` for http authentication like this, but like i said, go-git (and thus, git-bug) does not support re-using this.\n\n\u003e The second option does not work. It gives me this error\n\u003e\n\u003e ```\n\u003e Error: error creating SSH agent: \"SSH agent requested, but could not detect Pageant or Windows native SSH agent\"\n\u003e ```\n\u003e\n\u003e It happens in both CLI and termui. In CLI I used git bug push origin and git bug pull origin with the recommended configuration with SSH.\n\ngit-bug currently requires that an ssh agent is running (e.g. in linux/macos, `eval $(ssh-agent)`, and requires that the `SSH_AUTH_SOCK` environment variable is set. based on the error you got, i am assuming that you didn't have an agent running.\n\n\n\u003e I then tried the first option.\n\u003e \n\u003e This first option works for git bug push origin2 and git bug pull origin2 where origin2 is a new remote with the corresponding configuration. If I drop the origin2 remote en both commands, then it does not work but I don't know if these commands are intended to work if I do not give them remotes explicitly.\n\nwell... you configured the token-based URI for the `origin2` remote, and told `git-bug` to push/pull with that remote. then you ran push/pull _without_ specifying the `origin2` remote, meaning that `git-bug` will default to `origin`, where you **had not set your token in the URI**.\n\nthat was a user error, not an issue with git-bug.\n\n\u003e In TUI push and pull do not work and give the same error as in the second option. Maybe this happens because I cannot explicitly pick in TUI which remote I want to use.\n\nthis is a known issue. on the CLI, you can specify the remote you want to push to or pull from:\n\nhttps://github.com/git-bug/git-bug/blob/bd936650ccf44ca33cf9c8bf553fe090534d2ab3/commands/push.go#L31-L34\n\nbut in the TUI, the remote is not (yet) configurable, and always tries to interact with `origin`. if you **change the `origin` remote to embed the token in the URI**, git-bug's TUI will be able to push and pull for you without issue.","files":null},{"type":6,"timestamp":1747155200,"nonce":"YHmaWNUJiLEzEBLatMCTiITy8dU=","metadata":{"github-id":"UCE_lALOCGKeh86rf0ZAzmbMYFk"},"target":"a635e44bec4cf97cc2f90c781560cbf15dd88c86abb7be2d37f1c33b94339d61","message":"\u003e Git does not give me those prompts, I can pull and push without having to authenticate each time.\n\nyou **have to have configured your credentials somewhere**. it'd be normal to use git's `credential.helper` for http authentication like this, but like i said, go-git (and thus, git-bug) does not support re-using this.\n\n\u003e The second option does not work. It gives me this error\n\u003e\n\u003e ```\n\u003e Error: error creating SSH agent: \"SSH agent requested, but could not detect Pageant or Windows native SSH agent\"\n\u003e ```\n\u003e\n\u003e It happens in both CLI and termui. In CLI I used git bug push origin and git bug pull origin with the recommended configuration with SSH.\n\ngit-bug currently requires that an ssh agent is running (e.g. in linux/macos, `eval $(ssh-agent)`, and requires that the `SSH_AUTH_SOCK` environment variable is set. based on the error you got, i am assuming that you didn't have an agent running.\n\n\u003e I then tried the first option.\n\u003e \n\u003e This first option works for git bug push origin2 and git bug pull origin2 where origin2 is a new remote with the corresponding configuration. If I drop the origin2 remote en both commands, then it does not work but I don't know if these commands are intended to work if I do not give them remotes explicitly.\n\nwell... you configured the token-based URI for the `origin2` remote, and told `git-bug` to push/pull with that remote. then you ran push/pull _without_ specifying the `origin2` remote, meaning that `git-bug` will default to `origin`, where you **had not set your token in the URI**.\n\nthat was a user error, not an issue with git-bug.\n\n\u003e In TUI push and pull do not work and give the same error as in the second option. Maybe this happens because I cannot explicitly pick in TUI which remote I want to use.\n\nthis is a known issue. on the CLI, you can specify the remote you want to push to or pull from:\n\nhttps://github.com/git-bug/git-bug/blob/bd936650ccf44ca33cf9c8bf553fe090534d2ab3/commands/push.go#L31-L34\n\nbut in the TUI, the remote is not (yet) configurable, and always tries to interact with `origin`. if you **change the `origin` remote to embed the token in the URI**, git-bug's TUI will be able to push and pull for you without issue.","files":null}]}