{"author":{"id":"3998add589f6a09cf4bdf0e85e5481d2c48b8a757edd699a79a0c929ab5005db"},"ops":[{"type":3,"timestamp":1619346130,"nonce":"QXX3eK0f74/jC0byiexMc/94/Fg=","metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDgyNjI5OTE2NA==","github-url":"https://github.com/git-bug/git-bug/issues/642#issuecomment-826299164"},"message":"\u003e The github bridge adds a Metadata field (github-login) to currently used identity. (By doing so the bridge assumes, that my current identity matches the user of my github account.)\n\nCorrect. This happen at the end of each configurator, with this common piece of code: https://github.com/MichaelMure/git-bug/blob/87b97ca4b2f39240c698596ac14a6d3532f6363d/bridge/core/config.go#L22-L33\n\n\u003e Problem: The bridge has assigned my current identity (TestUser) the github-login metadata and so the lookup will return the TestUser identity, instead of creating another identity with the name Sascha (my _real_ GitHub identity).\n\nOk so the current identity is used as the identity matching the remote account.  However, that identity doesn't replace all the others like I initially thought from your report.\n\nSo, to me this is more a UX issue. You got confused as to why the github identity got mapped to your current git-bug identity. That's a fair issue but what I wonder is, would have you been confused as well without your docker setup? \n\nThere is two scenarios for the bridges:\n\nScenario 1:\n- create a user with `user create`, use git-bug\n- setup a bridge, push existing bugs and get new ones\n\nScenario 2:\n- setup a bridge, pull the existing bugs\n- select an identity as your own, edit and create new bugs\n- push your changes\n\nIf you look at the code I linked above, it address those two cases. Either the existing identity is mapped, or a new identity is created.\n\nNow that doesn't mean it's perfect, and there is probably more way to use git-bug.\n\nSo what could be done:\n- ask the user for confirmation before mapping the current identity (scenario 1), otherwise create a new identity\n- try to be smart and see if the name of the git-bug identity match the github one ... but that would probably introduce more weirdness and confusion","files":null}]}