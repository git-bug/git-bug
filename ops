{"author":{"id":"dbc9acbd4b292e651fa60597f3bdbb3f94389bacffe9b6c5d0d34e85b54fa541"},"ops":[{"type":3,"timestamp":1538494919,"nonce":"E2wwEPc65AK6qfAFwh+eyBGWRis=","metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQyNjMyMzI2NQ==","github-url":"https://github.com/git-bug/git-bug/issues/7#issuecomment-426323265"},"message":"@MichaelMure awesome, glad to see there's an interface and openness to the idea!","files":null},{"type":3,"timestamp":1538508960,"nonce":"ULzA1Poy60VPLR0X++HPfGFVoec=","metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQyNjQwMjU4NA==","github-url":"https://github.com/git-bug/git-bug/issues/7#issuecomment-426402584"},"message":"So I gave this a shot. A few comments...\n\n 1. I noticed that `git-bug` already exists as a command on my system. It's part of the [git-extras](https://github.com/tj/git-extras) package shipped in Debian, and is a rather [silly alias](https://github.com/tj/git-extras/blob/master/bin/git-bug)\n\n 2. the setup is a little unintuitive. here's my first try:\n\n        $ ~/go//bin/git-bug bridge configure \n        Building bug cache... Done.\n        target (github): \u003cHIT ENTER\u003e\n        invalid target\n        target (github): ^C\n\n    Now I may be a little dumb, but I didn't immediately figure out that the word in parenthesis was what I was supposed to write there (and not, as I expected, a default value that would get accepted when I hit enter). When I figured that out, it was more streamlined...\n\n 3. ... but then, what do you do with my passphrase?\n \n        Github project URL: https://github.com/linkchecker/linkchecker/\n        username: anarcat\n        password: \n        two-factor authentication code\n    \n    it does says above that \"git-bug will generate an access token in your Github profile.\" but it would be better to explicitly state that the password is not written on disk (which, hopefully, it isn't).\n\n 4. then I went into a dance of trying to figure out the right `pull` incantation. my first attempt failed because of an unrelated error message, which sent me down seeking the magical command:\n    \n        [1020]anarcat@curie:linkchecker$ ~/go//bin/git-bug bridge pull\n        import issue: contribution guidelines and FAQ\n        Error: no diff\n        Usage:\n          git-bug bridge pull [\u003cname\u003e] [flags]\n\n        Flags:\n          -h, --help   help for pull\n\n        [1020]anarcat@curie:linkchecker$ ~/go//bin/git-bug bridge pull default\n        Error: bad bridge fullname: default\n        Usage:\n          git-bug bridge pull [\u003cname\u003e] [flags]\n\n        Flags:\n          -h, --help   help for pull\n\n        [1021]anarcat@curie:linkchecker1$ ~/go//bin/git-bug bridge pull github\n        Error: bad bridge fullname: github\n        Usage:\n          git-bug bridge pull [\u003cname\u003e] [flags]\n\n        Flags:\n          -h, --help   help for pull\n\n        [1027]anarcat@curie:linkchecker130$ ~/go//bin/git-bug bridge \n        github.default\n        [1028]anarcat@curie:linkchecker$ ~/go//bin/git-bug bridge pull github.default\n\n    Phew! I'm not sure what to do about this. Maybe the problem is the first error shouldn't show the usage: I *did* call the command correctly and only got confused because I was shown the usage and thought I had to specify (and therefore guess) the right target name.\n\n 5. it does not seem to actually work:\n\n        [1034]anarcat@curie:linkchecker$ ~/go//bin/git-bug ls\n        [1035]anarcat@curie:linkchecker$ \n\n    Trust me, [linkcheck](https://github.com/linkchecker/linkchecker/) has [plenty of issues](https://github.com/linkchecker/linkchecker/issues). :) I *wish* that was right we had zero issues left, but unfortunately it is more likely not syncing the issues back down...\n\nThanks for the feature though! Can't wait to try it out. :)","files":null}]}