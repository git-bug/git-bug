{"author":{"id":"d82e3b0277388fab1285e702dfba0ce3b709e1919233977abaeab636c4c57550"},"ops":[{"type":1,"timestamp":1664130253,"nonce":"DApqhs/fYiYZmnp7h+AzLoMhV0Y=","metadata":{"github-id":"I_kwDOCGKeh85Sj0Cr","github-url":"https://github.com/git-bug/git-bug/issues/884","origin":"github"},"title":"Update security scanning","message":"As discussed in PR #883, scanning the project for security vulnerabilities when a PR is \"checked\" breaks the zen flow of PR approval process.\n\nThe vulnerability found by `govulncheck` (via the Github workflow via `make secure`) is in fact real (for the small percentage of `git-bug` users who are serving the `webui` to the public).  Additionally, this error was NOT found by the Github security tools.\n\nAdditionally, the vulnerabilities found by `govulncheck` can come to be outside the project's build process - when a vulnerability is discovered, there might be an arbitrary amount of time until the check is run against a PR.  For these reasons, this issue proposes that the `govulncheck` be run as a timed action and that it be integrated into Github security disclosures.  (So the `make secure-vulnerabilities' recipe would be excluded.)\n\nThe security problems reported by `GoKart` (as `make secure-practices`) on the other hand, are introduced by developers and therefore should remain part of the PR's \"checks\" and should break the build if the developer introduces a security issue.  The problems reported by `GoKart` generally involve processing data that hasn't been properly cleaned as described by #3 and #8 in the [OWASP Top 10 Web Application Security Risks](https://owasp.org/www-project-top-ten/).\n\nTo summarize the above, the following two tasks should be completed to resolve this issue:\n\n- [ ] Run `govulncheck` (or `make secure-vulnerabilities`) via a periodically triggered Github workflow and report via the Github Security process (preferred) or by creating a stand-alone issue to resolve the vulnerability.\n- [ ] Run `GoKart` (or `make secure-practices`) as a check that occurs when a PR is created or when a commit is added to an existing PR.\n- [ ] Continue to provide `make secure` as a build recipe so that developers can check the project thoroughly before committing code.\n\nSince `govulncheck` is the official tool for verifying that known Go vulnerabilities are not included in code, it's likely that Github will ultimately include this functionality as part of either the security scanner or dependabot.  If this occurs, we can eliminate the automated workflow for the scanner.","files":null}]}