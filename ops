{"author":{"id":"8f50e6b9cc04a7f2e3eeb3a5a9386099a1801f349e20f5147c6576499464fcb5"},"ops":[{"type":3,"timestamp":1590237137,"nonce":"QQpnB42ha6fRa0jNOGVE9Nkc07E=","metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDYzMzA0NDE2Ng==","github-url":"https://github.com/git-bug/git-bug/issues/392#issuecomment-633044166"},"message":"\u003e I'm not so familiar with it though, could you provide an example with all kind of relevant features ?\n\nAbsolutely, quickly sketched an example how it could look (in my Emacs):\n\n![image](https://user-images.githubusercontent.com/291333/82730473-e6b99a80-9cf7-11ea-95ad-3e145c77747c.png)\n\n- outlines are easy to collapse and navigate, you can easily jump between the comments\n- links are clickable: `#392` would bring you to the issue, `X` links straight to the comment\n- the dates in org-mode they are are first class objects (e.g. you can easily query for something like \"all comments in the past week\")\n- the tags on the right, separated by colons. In org-mode, it's easy to filter by tags and search globally over them\n- It's even possible to support internal links, e.g. if someone linked to another issue in the same project, you can have an org-mode link that would jump within the file (rather than go to the web interface)\n- markup: org-mode supports all the reasonable markup: links/bold/verbatim, etc., but the easiest is to \"quote\" the comments, at least to start with, so we don't have to deal with escaping transforming from markdown, etc.\n\nHere's how the raw `isues.org` file looks:\n\n```\n#+TODO: OPEN | CLOSED\n\n# issues are listed on the top level\n\n* OPEN [2020-05-23 Sat 13:00] [[https://github.com/MichaelMure/git-bug/issues/392][#392]] karlicoss: feature: ls dump issues as plaintext (markdown/org-mode) :CLI:enhancement:\n\n# each comment could be a subitem\n\n** [2020-05-23 Sat 13:00] [[https://github.com/MichaelMure/git-bug/issues/392#issue-623624779][X]] karlicoss: Basically a command like...\n...\n** [2020-05-23 Sat 13:00] [[https://github.com/MichaelMure/git-bug/issues/392#issuecomment-633037002][X]] MichaelMure: Hoooo, I like this idea of org-mode\n: Hoooo, I like this idea of org-mode. I'm not so familiar with it though, could you provide an example with all kind of relevant features ?\n:\n: Yes, git-bug would benefit from having this kind of export. It has been touched on in #45 and #370.'m not so familiar with it though, could you provide an example with all kind of relevant features ?\n\n\n* CLOSED [2020-03-16 Mon 14:05] [[https://github.com/MichaelMure/git-bug/issues/360][#360]] mkroehert: git-bug GitLab bridge does not correctly import labels :bridge:bug:\n: I heard of git-bug a couple of days ago and gave it a try today.\n: But first of all, I'd like to thank you for creating and maintaining this great project.\n\n\n# .... more issues below\n```\n\nAs you can see it's not that different from markdown in terms of structure, just supports more features. Once we have an abstract 'tree' of issues and comments, supporting different syntax should be a matter of few tweaks, hopefully.\n\n\u003e I would leave that to scripting, that's what those CLI commands are for.\n\nyeah, fair enough.. thinking again about it, git fetch hook might be better suited for this\n\n\u003e In term of implementation, it'd be nice if the ls command could do the listing/loading of bugs (as currently) and delegate the output to a set of formatters, one for each supported format.\n\nCool! Thanks, I'll take a look.","files":null}]}