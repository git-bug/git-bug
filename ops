{"author":{"id":"4d85ccdde3ad47c902de21b580354b67ed0cb07caa04e32d04ea93112f7f027e"},"ops":[{"type":5,"timestamp":1743630267,"nonce":"Ou5lI/puPW3qKAbqLmUJZfqBZRQ=","metadata":{"github-id":"UNLE_lADOCGKeh86jneuKzwAAAAP7U4Wz"},"added":[],"removed":["lifecycle/stale"]},{"type":5,"timestamp":1743630267,"nonce":"odBrq4l34WM6gsGdYq0I1+gWjkg=","metadata":{"github-id":"LE_lADOCGKeh86jneuKzwAAAAP7U4W8"},"added":["area/test"],"removed":[]},{"type":5,"timestamp":1743630267,"nonce":"+RvKw/jMJOuVY/zfdNlvCX1V5bY=","metadata":{"github-id":"LE_lADOCGKeh86jneuKzwAAAAP7U4XA"},"added":["kind/feature"],"removed":[]},{"type":5,"timestamp":1743630267,"nonce":"sdttCy2zbJ0SGT5W8Fo/A3JHNTU=","metadata":{"github-id":"LE_lADOCGKeh86jneuKzwAAAAP7U4XH"},"added":["lifecycle/frozen"],"removed":[]},{"type":5,"timestamp":1743630267,"nonce":"mvasTOlwowRhh+dE/JAZy0pFQdU=","metadata":{"github-id":"LE_lADOCGKeh86jneuKzwAAAAP7U4XN"},"added":["priority/important-longterm"],"removed":[]},{"type":3,"timestamp":1745849934,"nonce":"SaeGWv7E0uR8Pk/j+b5JN9QCPF4=","metadata":{"github-id":"IC_kwDOCGKeh86pAQIS","github-url":"https://github.com/git-bug/git-bug/issues/1313#issuecomment-2835415570"},"message":"just to add a comment here:\n\ngolang doesn't have inbuilt support for test categorization like this, but i do think the tests are a bit intermixed right now and in an ideal world, we shouldn't be running e2e tests non-explicitly.\n\nthe \"standard\" approach for this would probably be to mark every integration/e2e test as \"short\", e.g.:\n\n```\nfunc TestFoo(t *testing.T) {\n  if testing.Short() {\n    t.Skip(\"skipping TestFoo in short mode\")\n  }\n}\n```\n\nthen, these tests could be skipped by passing the `-short` flag to `go test`:\n\n```\ngo test -short ./...\n```\n\nwe don't do this now, so it might make sense to apply this to all of our networked/integration/e2 tests. for more fine-grained test categorization, we could also introduce a custom flag, e.g. `-network`, making those opt-out by default unless that flag is passed (technically, this could be done by inverting the boolean logic around checking `testing.Short()` as well, however, that is lexically odd and could cause confusion).","files":null},{"type":5,"timestamp":1746759877,"nonce":"0qV3eFpJ5cXFq46Utmg5GzmgKRI=","metadata":{"github-id":"UNLE_lADOCGKeh86jneuKzwAAAAQYEoa2"},"added":[],"removed":["lifecycle/pinned"]}]}