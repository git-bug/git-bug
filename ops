{"author":{"id":"4d85ccdde3ad47c902de21b580354b67ed0cb07caa04e32d04ea93112f7f027e"},"ops":[{"type":3,"timestamp":1678119930,"nonce":"bDMNsImG7ENHB4SmvmjvwBZp8pQ=","metadata":{"github-id":"IC_kwDOCGKeh85Wz6lD","github-url":"https://github.com/git-bug/git-bug/issues/327#issuecomment-1456449859"},"message":"I don't see how using another application to abstract the storage mechanism away is any different from using some command specified in gitconfig (which is what `git-credentials` does with the `credential.helper` parameter), which, as I've detailed in other comments in this thread, avoids requiring the user to install _a new dependency_, and avoids any sort of limitation on how the user wants to provide credentials to `git-bug`.\n\nIn fact, I think referencing `git-credential` here has added confusion around what we need to do. Let's scratch that topic.\n\nPiping out to a user-defined command to fetch credentials, securely storing that input somewhere, and going about our business seems to be the most straightforward way to accomplish this without much complexity.\n\n```\nâžœ git config --get-regex 'git-bug.*'\ngit-bug.credential_command /path/to/some/tool --foo --bar baz\n```\n\nWe then get the value for this, perform whatever validation we need to (e.g. does the program exist in `PATH`?), execute it, report back and short circuit if it fails, else take the `stdout` as input, store it securely ([`memguard`](https://github.com/awnumar/memguard)?), and use it as the credential when authenticating.","files":null}]}