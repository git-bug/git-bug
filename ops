{"author":{"id":"3998add589f6a09cf4bdf0e85e5481d2c48b8a757edd699a79a0c929ab5005db"},"ops":[{"type":3,"timestamp":1722853883,"nonce":"apKYhnG6ZOUm4T/0FyTvW1jC6F8=","metadata":{"github-id":"IC_kwDOCGKeh86HOkIX","github-url":"https://github.com/git-bug/git-bug/issues/1213#issuecomment-2268742167"},"message":"Disagree on this one.\n\nHere is the UX guideline I've used and the reasoning behind:\n- different UI class (CLI, interactive terminal, web) have different strength and weaknesses. Not only each user has general preferences, but the same users is going to use a different UI for a different task. --\u003e git-but should have all 3 classes built-in, as first-class feature\n- first class feature also means trivial to invoke --\u003e require a short invocation (a few key stroke) --\u003e should be at the root of the CLI\n\nHere is the intended usage of each class:\n- CLI: integration with other programs (shell pipe, into editors ...), human usage for punctual operations. Roughly: low level plumbing.\n- termui: good UX for humans in the terminal (lightweight, efficient), remote operation (ssh), or simply browsing in the same place as other `git` operations\n- webUI: full capability (notably: images and media), at the cost of being heavier and changing the medium (terminal--\u003ebrowser). Also: **public usage**.\n\nMy key points in this:\n- user use **multiple** UIs, so a default mechanism doesn't work\n- there is ever going to be only those 3 classes of UI, so there is little benefit in abstracting behind another CLI hierarchy.","files":null},{"type":3,"timestamp":1722853926,"nonce":"m0IYe5zE7N+sgH3twR/KmWS7mRk=","metadata":{"github-id":"IC_kwDOCGKeh86HOkch","github-url":"https://github.com/git-bug/git-bug/issues/1213#issuecomment-2268743457"},"message":"Besides, that's one area where there has been zero UX confusion/problem that I know of.","files":null}]}