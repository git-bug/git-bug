{"author":{"id":"4d85ccdde3ad47c902de21b580354b67ed0cb07caa04e32d04ea93112f7f027e"},"ops":[{"type":3,"timestamp":1746742668,"nonce":"3Sy2opxrDLc08m6bzVhvORALkJg=","metadata":{"github-id":"IC_kwDOCGKeh86qvaw8","github-url":"https://github.com/git-bug/git-bug/issues/1402#issuecomment-2864557116"},"message":"Thanks for your report. The \"new identity\" workflow currently reads from the local and global configuration scopes, but [go-git still doesn't follow includes](https://github.com/go-git/go-git/issues/110), so this is something git-bug will need to implement itself.","files":null},{"type":3,"timestamp":1746743449,"nonce":"zF/9Zc7pAOzKuCcmqfTYUog4Ekg=","metadata":{"github-id":"IC_kwDOCGKeh86qve4U","github-url":"https://github.com/git-bug/git-bug/issues/1402#issuecomment-2864573972"},"message":"As an alternative workaround, you might consider changing how you override configuration. This is what I do, and it works exceptionally well for different \"roles\", e.g. personal or work.\n\n\n#### 1. My global git configuration has my default identity, e.g. personal identity.\n\n```\n➜ head -n3 ~/.config/git/config\n[user]\n        name = me\n        email = foo@localhost\n```\n\n#### 2. My git repositories are namespaced on disk\n\nFor example, `git-bug` lives at `~/code/github.com/git-bug/git-bug`. You don't need to do this, but you do at least need to group your different roles under folders, e.g. `~/code/personal/...` and `~/code/work-1/...`, `~/code/work-2/...`, etc.\n\n3. Set up small configuration files for the non-default roles:\n\n```\n➜ head -n3 ~/.config/git/config.work\n[user]\n        name = firstname lastname\n        email = me@company-domain.com\n```\n\nYou can add any valid git configuration you want in here.\n\n4. Use `includeIf` stanzas to load the alternate config file based on the directory you're in\n\n```\n[includeIf \"gitdir:~/code/work\"]\n\tpath = ~/.config/git/config.work\n```\n\n---\n\nThis also would have not worked until recently, but a150cdb0740d572cd5da9e8fd858168bf5796233 introduced support for `includeIf` directives.","files":null},{"type":6,"timestamp":1746743615,"nonce":"pF4kznY+dkgc8CFoYigpBDwcPcQ=","metadata":{"github-id":"UCE_lALOCGKeh86qve4UzmZNggI"},"target":"6064b96c79262473284a866fc71932c544e39b08194b59ad7ba99d4f291e4221","message":"As an alternative workaround, you might consider changing how you override configuration. This is what I do, and it works exceptionally well for different \"roles\", e.g. personal or work.\n\n\n#### 1. My global git configuration has my default identity, e.g. personal identity.\n\n```\n➜ head -n3 ~/.config/git/config\n[user]\n        name = me\n        email = foo@localhost\n```\n\n#### 2. My git repositories are namespaced on disk\n\nFor example, `git-bug` lives at `~/code/github.com/git-bug/git-bug`. You don't need to do this, but you do at least need to group your different roles under folders, e.g. `~/code/personal/...` and `~/code/work-1/...`, `~/code/work-2/...`, etc.\n\n3. Set up small configuration files for the non-default roles:\n\n```\n➜ head -n3 ~/.config/git/config.work\n[user]\n        name = firstname lastname\n        email = me@company-domain.com\n```\n\nYou can add any valid git configuration you want in here.\n\n4. Use `includeIf` to load the alternate config files\n\nPut one or more `includeIf` directives at the bottom of your global git configuration file. These tell git to load these other config files based of the directory of the repository you're in.\n\n```\n[includeIf \"gitdir:~/code/work\"]\n\tpath = ~/.config/git/config.work\n```\n\nWith this configuration, when in `~/code/work/some-repo`, the `~/.config/git/config.work` file will be loaded and settings defined within it will override earlier settings in your global config file.\n\n---\n\nThis also would have not worked until recently, but a150cdb0740d572cd5da9e8fd858168bf5796233 introduced support for `includeIf` directives.","files":null},{"type":6,"timestamp":1746744188,"nonce":"ba3JjuXJS9cgkAc+AbXpDGZAeBY=","metadata":{"github-id":"UCE_lALOCGKeh86qve4UzmZNuSM"},"target":"6064b96c79262473284a866fc71932c544e39b08194b59ad7ba99d4f291e4221","message":"As an alternative workaround, you might consider changing how you override configuration. This is what I do, and it works exceptionally well for different \"roles\", e.g. personal or work.\n\n\n#### 1. My global git configuration has my default identity, e.g. personal identity.\n\n```\n➜ head -n3 ~/.config/git/config\n[user]\n        name = me\n        email = foo@localhost\n```\n\n#### 2. My git repositories are namespaced on disk\n\nFor example, `git-bug` lives at `~/code/github.com/git-bug/git-bug`. You don't need to do this, but you do at least need to group your different roles under folders, e.g. `~/code/personal/...` and `~/code/work-1/...`, `~/code/work-2/...`, etc.\n\n#### 3. Set up small configuration files for the non-default roles:\n\n```\n➜ head -n3 ~/.config/git/config.work\n[user]\n        name = firstname lastname\n        email = me@company-domain.com\n```\n\nYou can add any valid git configuration you want in here.\n\n#### 4. Use `includeIf` to load the alternate config files\n\nPut one or more `includeIf` directives at the bottom of your global git configuration file. These tell git to load these other config files based of the directory of the repository you're in.\n\n```\n[includeIf \"gitdir:~/code/work\"]\n\tpath = ~/.config/git/config.work\n```\n\nWith this configuration, when in `~/code/work/some-repo`, the `~/.config/git/config.work` file will be loaded and settings defined within it will override earlier settings in your global config file.\n\n---\n\nThis also would have not worked until recently, but a150cdb0740d572cd5da9e8fd858168bf5796233 introduced support for `includeIf` directives.","files":null},{"type":6,"timestamp":1747158392,"nonce":"63j9KTuh7Me+u0lPbP/jxEaZUiw=","metadata":{"github-id":"UCE_lALOCGKeh86qve4UzmbOYeA"},"target":"6064b96c79262473284a866fc71932c544e39b08194b59ad7ba99d4f291e4221","message":"As an alternative workaround, you might consider changing how you override configuration. This is what I do, and it works exceptionally well for different \"roles\", e.g. personal or work.\n\n\n#### 1. My global git configuration has my default identity, e.g. personal identity.\n\n```\n➜ head -n3 ~/.config/git/config\n[user]\n        name = me\n        email = foo@localhost\n```\n\n#### 2. My git repositories are namespaced on disk\n\nFor example, `git-bug` lives at `~/code/github.com/git-bug/git-bug`. You don't need to do this, but you do at least need to group your different roles under folders, e.g. `~/code/personal/...` and `~/code/work-1/...`, `~/code/work-2/...`, etc.\n\n#### 3. Set up small configuration files for the non-default roles:\n\n```\n➜ head -n3 ~/.config/git/config.work\n[user]\n        name = firstname lastname\n        email = me@company-domain.com\n```\n\nYou can add any valid git configuration you want in here.\n\n#### 4. Use `includeIf` to load the alternate config files\n\nPut one or more `includeIf` directives at the bottom of your global git configuration file. These tell git to load these other config files based of the directory of the repository you're in.\n\n```\n[includeIf \"gitdir:~/code/work\"]\n\tpath = ~/.config/git/config.work\n```\n\nWith this configuration, when in `~/code/work/some-repo`, the `~/.config/git/config.work` file will be loaded and settings defined within it will override earlier settings in your global config file.\n\n---\n\nI wrote more extensively about this [here](https://gist.github.com/sudoforge/e793283851ee04fcaae0fc9d3dfdcca9).","files":null},{"type":2,"timestamp":1746744137,"nonce":"p9XWq0qWqnviXJGjT138xsYJirA=","metadata":{"github-id":"RTE_lADOCGKeh861xyXNzwAAAAQX75Ak"},"title":"`include.path` options from git configuration are not followed","was":"`include.path` options from git configuration are not followed"},{"type":5,"timestamp":1746744149,"nonce":"cLLBYhw4Watk8cO8XsMJvfDcIzk=","metadata":{"github-id":"UNLE_lADOCGKeh861xyXNzwAAAAQX76CW"},"added":[],"removed":["priority/important-soon"]},{"type":5,"timestamp":1746744149,"nonce":"wxRcRpyy3CtIpS0FVI8zvEDnbcM=","metadata":{"github-id":"LE_lADOCGKeh861xyXNzwAAAAQX76Ce"},"added":["priority/backlog"],"removed":[]},{"type":5,"timestamp":1746759877,"nonce":"ZowEePR3/2SslZNbaZv+rjNtmFA=","metadata":{"github-id":"UNLE_lADOCGKeh861xyXNzwAAAAQYEoZI"},"added":[],"removed":["lifecycle/pinned"]}]}