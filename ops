{"author":{"id":"4d85ccdde3ad47c902de21b580354b67ed0cb07caa04e32d04ea93112f7f027e"},"ops":[{"type":6,"timestamp":1745053458,"nonce":"q9b/1eOKvy7zIbSUfWROhN86zmc=","metadata":{"github-id":"UCE_lAHOCGKeh86zMK_Ezng77jY"},"target":"242583c694250c97272b551bc8e60aa58e567d3c9e0baadfb91866f23441d357","message":"https://github.com/git-bug/git-bug/actions/runs/14547588831/job/40815002321#step:5:142\n\nthis tree was branched off of HEAD at 52f42daf8bf317a065277da50d916c90e26fe4dd\n\nthis is likely caused by a change to gitlab's api","files":null},{"type":5,"timestamp":1745053493,"nonce":"8mUj5vZhW15iL0v9B+B4hZLXADw=","metadata":{"github-id":"LE_lADOCGKeh86zMK_EzwAAAAQI1iXf"},"added":["kind/bug"],"removed":[]},{"type":5,"timestamp":1745053493,"nonce":"vyjQpA8Pl+XZBwnrBzBBi6383Zk=","metadata":{"github-id":"LE_lADOCGKeh86zMK_EzwAAAAQI1iXh"},"added":["area/bridge/gitlab"],"removed":[]},{"type":5,"timestamp":1745053493,"nonce":"LDfikLNFJF6QQWP/lbk2taF7eNM=","metadata":{"github-id":"LE_lADOCGKeh86zMK_EzwAAAAQI1iXi"},"added":["area/test"],"removed":[]},{"type":5,"timestamp":1745053502,"nonce":"1t4xnQHKUYSlLQtBFLQab6Uog1s=","metadata":{"github-id":"UNLE_lADOCGKeh86zMK_EzwAAAAQI1iba"},"added":[],"removed":["area/bridge/gitlab"]},{"type":5,"timestamp":1745053543,"nonce":"iKgVFxfkQK4nOW1a8j7bpTRAS8I=","metadata":{"github-id":"UNLE_lADOCGKeh86zMK_EzwAAAAQI1iw6"},"added":[],"removed":["area/test"]},{"type":5,"timestamp":1745053543,"nonce":"CBlJmrsbQlzgfcp4rch4tWOEMrs=","metadata":{"github-id":"LE_lADOCGKeh86zMK_EzwAAAAQI1iw7"},"added":["area/bridge/gitlab"],"removed":[]},{"type":5,"timestamp":1745053543,"nonce":"X4c4vj8ALq9HOpXFak5bv8gAWNs=","metadata":{"github-id":"LE_lADOCGKeh86zMK_EzwAAAAQI1iw9"},"added":["priority/important-soon"],"removed":[]},{"type":3,"timestamp":1745111666,"nonce":"8wGbNbbh4UMm+//daY0rvxyQs4I=","metadata":{"github-id":"IC_kwDOCGKeh86n5v6i","github-url":"https://github.com/git-bug/git-bug/issues/1367#issuecomment-2816933538"},"message":"i started on this, but will be AFK for a few days so i won't be able to complete it. if you're interested in the status: there's a detailed comment in the commit; take a look at the PR.","files":null},{"type":6,"timestamp":1745111687,"nonce":"ienCo/4YGHrEcBDYqQOrI2PrGd0=","metadata":{"github-id":"UCE_lALOCGKeh86n5v6izmQErSQ"},"target":"6ff0dad42bc29799e65ce30104133b6b4583f84581a1bdb6c03c1b0bf82f0772","message":"i started on this, but will be AFK for a few days so i won't be able to complete it. if you're interested in the status: there's a detailed comment in the commit; take a look at the PR: https://github.com/git-bug/git-bug/pull/1370","files":null},{"type":3,"timestamp":1745113247,"nonce":"xI4DV8nxCUVteFfQYSHYRHco43c=","metadata":{"github-id":"IC_kwDOCGKeh86n5xiS","github-url":"https://github.com/git-bug/git-bug/issues/1367#issuecomment-2816940178"},"message":"opened an upstream issue: https://gitlab.com/gitlab-org/gitlab/-/issues/536827\n\ni have no idea if that's the right place. they have a ton of projects and no clear direction on where to file \"API issues\".","files":null},{"type":2,"timestamp":1745116056,"nonce":"maklaig5/Ia/dEBZtexw4BVPIc8=","metadata":{"github-id":"RTE_lADOCGKeh86zMK_EzwAAAAQI9Szq"},"title":"import/export to gitlab is broken at HEAD due to upstream changing the message format","was":"import/export to gitlab is broken at HEAD due to upstream changing the message format"},{"type":3,"timestamp":1745426579,"nonce":"z8AOfD16BjjvqiMAS1yrIvL6kok=","metadata":{"github-id":"IC_kwDOCGKeh86oYLhg","github-url":"https://github.com/git-bug/git-bug/issues/1367#issuecomment-2824910944"},"message":"i'll summarize the root cause here for people who'd rather not read the thread on gitlab (_there's a bit of back and forth about how to potentially improve this scenario, if you're interested_).\n\n---\n\nwhen importing from gitlab, in order to get the historical events related to a gitlab issue, we hit the \"issue notes api\", and get a list of objects that look like this:\n\n```\n{\n  \"id\": 123412341234,\n  \"type\": null,\n  \"body\": \"changed title from **bug title edited** to **bug title edited{+ again+}**\",\n  \"author\": {\n    ...\n  },\n  \"created_at\": \"2024-03-19T20:56:59.456Z\",\n  \"updated_at\": \"2024-03-19T20:56:59.463Z\",\n  \"system\": true,\n  \"noteable_id\": 12341234,\n  \"noteable_type\": \"Issue\",\n  \"project_id\": 12341234,\n  \"resolvable\": false,\n  \"confidential\": false,\n  \"internal\": false,\n  \"imported\": false,\n  \"imported_from\": \"none\",\n  \"noteable_iid\": 1,\n  \"commands_changes\": {}\n}\n```\n\nthe critical field here is the `body` field. this value represents that the title was changed from `bug title edited` to `bug title edited again`.\n\ngitlab uses this sort of message to render the \"comments\" that are added to issues when different event types occur: a title being changed, a mention from somewhere else, commits being added, etc. this comprises the \"notes\" that get added to an issue's feed (you can see a similar thing on github issues, above, for example). for this use case, gitlab doesn't care about the `body` field's value -- they just dump it into `SomeRenderer` that spits out something for their UI.\n\nconversely, `git-bug` cares about the _type_ of event. we track these events as strongly typed \"operations\", and therefore, we need to _parse_ this event.\n\nhistorically, this field's value looked like what you see above. with the advent of the 17.11 release, however, gitlab changed the format of the value.\n\nthis means that the following two values represent the exact same title change, from `bug title edited` to `bug title edited again`:\n\n_original_\n\n```\nchanged title from **bug title edited** to **bug title edited{+ again+}**\n```\n\n_post-17.11_\n\n```\n\u003cp\u003echanged title from \u003ccode class=\\\"idiff\\\"\u003ebug title edited\u003c/code\u003e to \u003ccode class=\\\"idiff\\\"\u003ebug title edited\u003cspan class=\\\"idiff left right addition\\\"\u003e again\u003c/span\u003e\u003c/code\u003e\u003c/p\u003e\n```\n\nthe kicker here is that this only impacts _newly created issue notes_. older issue notes still use the original markdown-esque format.\n\n---\n\nas can be seen from this issue, the approach we take to determine the _type_ of \"note\" (rather, \"event\" as we think about it) is pretty fragile, and relies on a loosely typed value that isn't part of gitlab's API contract. unfortunately, there doesn't appear to be another way for us to get this information -- although it's possible gitlab could add support for our use case in the future.\n\nin the short term, we'll have to conditionally use the new parser i wrote in #1370, falling back to the older parser. it doesn't seem like there's an exact timestamp we can use for determining if the `body` field will be in the new or old format, so the best course of action will just be a brute force approach using a regex.","files":null},{"type":4,"timestamp":1745596151,"nonce":"hqKMRksweanpTAWE8vbvYeCHU50=","metadata":{"github-id":"CE_lADOCGKeh86zMK_EzwAAAAQNowzS"},"status":2}]}