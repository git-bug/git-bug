{"author":{"id":"4d85ccdde3ad47c902de21b580354b67ed0cb07caa04e32d04ea93112f7f027e"},"ops":[{"type":3,"timestamp":1746738842,"nonce":"hctpYcS0rsPGBVe83NiViVdZpIg=","metadata":{"github-id":"IC_kwDOCGKeh86quim8","github-url":"https://github.com/git-bug/git-bug/issues/1139#issuecomment-2864327100"},"message":"hmm. i recreated the workflow you provided:\n\n```\n➜ cd $(mktemp -d)\n\n\n➜ gh repo create --private git-bug-1139\n✓ Created repository sudoforge/git-bug-1139 on GitHub\n  https://github.com/sudoforge/git-bug-1139\n\n\n➜ git init                                 \nInitialized empty Git repository in /tmp/tmp.nL3ryY0Ev3/.git/\n\n\n➜ git commit --allow-empty -m 'initial commit'        \n[trunk (root-commit) 5450d59] initial commit\n\n\n➜ git remote add origin git@github.com:sudoforge/git-bug-1139.git\n\n\n➜ git push -u origin trunk\nEnumerating objects: 2, done.\nCounting objects: 100% (2/2), done.\nWriting objects: 100% (2/2), 343 bytes | 343.00 KiB/s, done.\nTotal 2 (delta 0), reused 0 (delta 0), pack-reused 0 (from 0)\nTo github.com:sudoforge/git-bug-1139.git\n * [new branch]      trunk -\u003e trunk\nbranch 'trunk' set up to track 'origin/trunk' by rebasing.\n\n\n➜ git bug version\ngit-bug version: v0.8.1\n```\n\nthis is a pretty standard approach for creating a github repository and pushing to it, proving that SSH works. neat, but a bit rote.\n\nnext, you ran `git-bug-pull`. this is actually not valid; you first need to have a local git-bug identity configured, which is actually a bit of an issue if you have an identity in the remote and are expecting to be able to pull seamlessly -- see #1003 for more info.\n\nwith an identity configured, `git-bug-pull` completes without error for me (there is nothing to pull from this new repository, but it hits the remote and exits without error).\n\n---\n\nif you don't have an identity set, but the actual communication with the remote works, you'd get these error messages (which are a bit repetitive, this needs to fail faster, probably):\n\n```\n➜ git bug pull\nBuilding cache... \nFetching remote ...\nalready up-to-date\nMerging data ...\nNo identity is set.\nTo interact with bugs, an identity first needs to be created using \"git bug user new\" or adopted with \"git bug user adopt\"\n: merge error: No identity is set.\nTo interact with bugs, an identity first needs to be created using \"git bug user new\" or adopted with \"git bug user adopt\"\nNo identity is set.\nTo interact with bugs, an identity first needs to be created using \"git bug user new\" or adopted with \"git bug user adopt\"\n: merge error: No identity is set.\nTo interact with bugs, an identity first needs to be created using \"git bug user new\" or adopted with \"git bug user adopt\"\n```\n\nso, the fact that you're getting:\n\n```\nError: ssh: handshake failed: ssh: unable to authenticate, attempted methods [none publickey], no supported methods remain\n```\n\nleads me to believe that you have _something_ bespoke to your environment that is non-standard, that's messing with your ssh configuration. that said, i'm happy to help you debug this, as it could be that git-bug isn't supporting some git-config or ssh feature that it _probably should_.\n\non that same repository (or a new one created with the same steps), can you run:\n\n- `git remote get-url origin`\n- `git config --list --show-origin --show-scope | grep -i 'github'`\n- `echo \"GIT_SSH_COMMAND: ${GIT_SSH_COMMAND}\"`\n- `git config --get --default 'UNSET' --show-scope core.sshCommand`\n- `echo \"SSH_AUTH_SOCK: ${SSH_AUTH_SOCK}` (or just tell me if you are using openssh or gpg-agent)\n\nadditionally, if you have any custom ssh configuration for `github.com` in `~/.ssh/config`, copy and paste that.\n\n**PLEASE BE SURE TO REDACT ANYTHING YOU CONSIDER TO BE PRIVATE OR SENSITIVE**. doing so without removing the context around what the value is would be greatly appreciated.","files":null},{"type":6,"timestamp":1746739233,"nonce":"WKzpV3mU0UoSmw82aFhV0D0Fox0=","metadata":{"github-id":"UCE_lALOCGKeh86quim8zmZLcvs"},"target":"1aa11be5ec0446767341e32b56cf39f3e08ae5bbf9802752b56130f3f545ad3c","message":"hmm. i recreated the workflow you provided:\n\n```\n➜ cd $(mktemp -d)\n\n\n➜ gh repo create --private git-bug-1139\n✓ Created repository sudoforge/git-bug-1139 on GitHub\n  https://github.com/sudoforge/git-bug-1139\n\n\n➜ git init                                 \nInitialized empty Git repository in /tmp/tmp.nL3ryY0Ev3/.git/\n\n\n➜ git commit --allow-empty -m 'initial commit'        \n[trunk (root-commit) 5450d59] initial commit\n\n\n➜ git remote add origin git@github.com:sudoforge/git-bug-1139.git\n\n\n➜ git push -u origin trunk\nEnumerating objects: 2, done.\nCounting objects: 100% (2/2), done.\nWriting objects: 100% (2/2), 343 bytes | 343.00 KiB/s, done.\nTotal 2 (delta 0), reused 0 (delta 0), pack-reused 0 (from 0)\nTo github.com:sudoforge/git-bug-1139.git\n * [new branch]      trunk -\u003e trunk\nbranch 'trunk' set up to track 'origin/trunk' by rebasing.\n\n\n➜ git bug version\ngit-bug version: v0.8.1\n```\n\nthis is a pretty standard approach for creating a github repository and pushing to it, proving that SSH works. neat, but a bit rote.\n\nnext, you ran `git-bug-pull`. this is actually not valid; you first need to have a local git-bug identity configured, which is actually a bit of an issue if you have an identity in the remote and are expecting to be able to pull seamlessly -- see #1003 for more info.\n\nwith an identity configured, `git-bug-pull` completes without error for me (there is nothing to pull from this new repository, but it hits the remote and exits without error).\n\n---\n\nif you don't have an identity set, but the actual communication with the remote works, you'd get these error messages (which are a bit repetitive, this needs to fail faster, probably):\n\n```\n➜ git bug pull\nBuilding cache... \nFetching remote ...\nalready up-to-date\nMerging data ...\nNo identity is set.\nTo interact with bugs, an identity first needs to be created using \"git bug user new\" or adopted with \"git bug user adopt\"\n: merge error: No identity is set.\nTo interact with bugs, an identity first needs to be created using \"git bug user new\" or adopted with \"git bug user adopt\"\nNo identity is set.\nTo interact with bugs, an identity first needs to be created using \"git bug user new\" or adopted with \"git bug user adopt\"\n: merge error: No identity is set.\nTo interact with bugs, an identity first needs to be created using \"git bug user new\" or adopted with \"git bug user adopt\"\n```\n\nso, the fact that you're getting:\n\n```\nError: ssh: handshake failed: ssh: unable to authenticate, attempted methods [none publickey], no supported methods remain\n```\n\nleads me to believe that you have _something_ bespoke to your environment that is non-standard, that's messing with your ssh configuration. that said, i'm happy to help you debug this, as it could be that git-bug isn't supporting some git-config or ssh feature that it _probably should_.\n\non that same repository (or a new one created with the same steps), can you run:\n\n- `git remote get-url origin`\n- `git config --list --show-origin --show-scope | grep -i 'github'`\n- `echo \"GIT_SSH_COMMAND: ${GIT_SSH_COMMAND}\"`\n- `git config --get --default 'UNSET' --show-scope core.sshCommand`\n- `echo \"SSH_AUTH_SOCK: ${SSH_AUTH_SOCK}\"` (or just tell me if you are using openssh or gpg-agent)\n\nadditionally, if you have any custom ssh configuration for `github.com` in `~/.ssh/config`, copy and paste that.\n\n**PLEASE BE SURE TO REDACT ANYTHING YOU CONSIDER TO BE PRIVATE OR SENSITIVE**. doing so without removing the context around what the value is would be greatly appreciated.","files":null}]}