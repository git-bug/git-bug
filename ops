{"author":{"id":"d82e3b0277388fab1285e702dfba0ce3b709e1919233977abaeab636c4c57550"},"ops":[{"type":3,"timestamp":1653673477,"nonce":"kzSGmL+v/4l6+lvBJnXjBXQ2JsA=","metadata":{"github-id":"IC_kwDOCGKeh85D8VBo","github-url":"https://github.com/git-bug/git-bug/issues/778#issuecomment-1139888232"},"message":"@MichaelMure - I've confirmed this issue on my local machine and will have a failing test for it tomorrow.  If you'd like, you can assign this to me.","files":null},{"type":3,"timestamp":1653749139,"nonce":"+74y8AJ/3Hpq4U4yqFGthfm9UOA=","metadata":{"github-id":"IC_kwDOCGKeh85D90AH","github-url":"https://github.com/git-bug/git-bug/issues/778#issuecomment-1140277255"},"message":"Running this locally (Debian Bullseye Linux) results in the hanging CLI as noted above and CTRL-C doesn't terminate the hung state.  Running this using Go test running and the new `testEnv` created as part of https://github.com/selesy/git-bug/tree/fix/778-git-bug-rm-broken allows the supervising Go routine to terminate the operation on timeout and return each Go routine's state.  Here's the output of the test runner when that timeout occurs:\n\n```\nsmoyer1@smoyer1-carbon:~/git/git-bug$ go test -coverprofile=/tmp/junk ./commands -run TestRm\n^C^C^C^CBuilding identity cache... Done.\nBuilding bug cache... Done.\n\ncoverage: 24.5% of statements\npanic: test timed out after 10m0s\n\ngoroutine 36 [running]:\ntesting.(*M).startAlarm.func1()\n        /opt/go/1.18.2/src/testing/testing.go:2029 +0x8e\ncreated by time.goFunc\n        /opt/go/1.18.2/src/time/sleep.go:176 +0x32\n\ngoroutine 1 [chan receive, 10 minutes]:\ntesting.(*T).Run(0xc00030d1e0, {0x11906b8?, 0x51b005?}, 0x1242530)\n        /opt/go/1.18.2/src/testing/testing.go:1487 +0x37a\ntesting.runTests.func1(0xc00030d1e0?)\n        /opt/go/1.18.2/src/testing/testing.go:1839 +0x6e\ntesting.tRunner(0xc00030d1e0, 0xc0000d7ca0)\n        /opt/go/1.18.2/src/testing/testing.go:1439 +0x102\ntesting.runTests(0xc0003177c0?, {0x1a75980, 0x5, 0x5}, {0x7f6f4d3b8108?, 0x40?, 0x1a84400?})\n        /opt/go/1.18.2/src/testing/testing.go:1837 +0x457\ntesting.(*M).Run(0xc0003177c0)\n        /opt/go/1.18.2/src/testing/testing.go:1719 +0x5d9\nmain.main()\n        _testmain.go:187 +0x255\n\ngoroutine 6 [select, 10 minutes]:\ngithub.com/blevesearch/bleve/index.AnalysisWorker({0xc0002edc80?, 0xc0002edce0?})\n        /home/smoyer1/go/pkg/mod/github.com/blevesearch/bleve@v1.0.14/index/analysis.go:102 +0xc6\ncreated by github.com/blevesearch/bleve/index.NewAnalysisQueue\n        /home/smoyer1/go/pkg/mod/github.com/blevesearch/bleve@v1.0.14/index/analysis.go:94 +0x92\n\ngoroutine 7 [select, 10 minutes]:\ngithub.com/blevesearch/bleve/index.AnalysisWorker({0xc0002edc80?, 0xc0002edce0?})\n        /home/smoyer1/go/pkg/mod/github.com/blevesearch/bleve@v1.0.14/index/analysis.go:102 +0xc6\ncreated by github.com/blevesearch/bleve/index.NewAnalysisQueue\n        /home/smoyer1/go/pkg/mod/github.com/blevesearch/bleve@v1.0.14/index/analysis.go:94 +0x92\n\ngoroutine 8 [select, 10 minutes]:\ngithub.com/blevesearch/bleve/index.AnalysisWorker({0xc0002edc80?, 0xc0002edce0?})\n        /home/smoyer1/go/pkg/mod/github.com/blevesearch/bleve@v1.0.14/index/analysis.go:102 +0xc6\ncreated by github.com/blevesearch/bleve/index.NewAnalysisQueue\n        /home/smoyer1/go/pkg/mod/github.com/blevesearch/bleve@v1.0.14/index/analysis.go:94 +0x92\n\ngoroutine 9 [select, 10 minutes]:\ngithub.com/blevesearch/bleve/index.AnalysisWorker({0xc0002edc80?, 0xc0002edce0?})\n        /home/smoyer1/go/pkg/mod/github.com/blevesearch/bleve@v1.0.14/index/analysis.go:102 +0xc6\ncreated by github.com/blevesearch/bleve/index.NewAnalysisQueue\n        /home/smoyer1/go/pkg/mod/github.com/blevesearch/bleve@v1.0.14/index/analysis.go:94 +0x92\n\ngoroutine 10 [IO wait, 10 minutes]:\ninternal/poll.runtime_pollWait(0x7f6f25dfb918, 0x72)\n        /opt/go/1.18.2/src/runtime/netpoll.go:302 +0x89\ninternal/poll.(*pollDesc).wait(0xc0000da700?, 0xc000110490?, 0x0)\n        /opt/go/1.18.2/src/internal/poll/fd_poll_runtime.go:83 +0x32\ninternal/poll.(*pollDesc).waitRead(...)\n        /opt/go/1.18.2/src/internal/poll/fd_poll_runtime.go:88\ninternal/poll.(*FD).ReadMsg(0xc0000da700, {0xc000110490, 0x10, 0x10}, {0xc000114020, 0x1000, 0x1000}, 0x7f6f24d94118?)\n        /opt/go/1.18.2/src/internal/poll/fd_unix.go:304 +0x31c\nnet.(*netFD).readMsg(0xc0000da700, {0xc000110490?, 0x7f6f24d94118?, 0x0?}, {0xc000114020?, 0x418ce5?, 0x1aaef60?}, 0xc0000c5d08?)\n        /opt/go/1.18.2/src/net/fd_posix.go:78 +0x37\nnet.(*UnixConn).readMsg(0xc000010730, {0xc000110490?, 0xc0000c5d80?, 0x40f345?}, {0xc000114020?, 0xb?, 0x7f6f26a86fff?})\n        /opt/go/1.18.2/src/net/unixsock_posix.go:115 +0x4f\nnet.(*UnixConn).ReadMsgUnix(0xc000010730, {0xc000110490?, 0xc0000c5df8?, 0x40f345?}, {0xc000114020?, 0x0?, 0x0?})\n        /opt/go/1.18.2/src/net/unixsock.go:143 +0x3c\ngithub.com/godbus/dbus.(*oobReader).Read(0xc000114000, {0xc000110490?, 0xc0000c5e20?, 0x40f6a7?})\n        /home/smoyer1/go/pkg/mod/github.com/godbus/dbus@v0.0.0-20190726142602-4481cbc300e2/transport_unix.go:21 +0x45\nio.ReadAtLeast({0x1360960, 0xc000114000}, {0xc000110490, 0x10, 0x10}, 0x10)\n        /opt/go/1.18.2/src/io/io.go:331 +0x9a\nio.ReadFull(...)\n        /opt/go/1.18.2/src/io/io.go:350\ngithub.com/godbus/dbus.(*unixTransport).ReadMessage(0xc0002f3170)\n        /home/smoyer1/go/pkg/mod/github.com/godbus/dbus@v0.0.0-20190726142602-4481cbc300e2/transport_unix.go:91 +0x11e\ngithub.com/godbus/dbus.(*Conn).inWorker(0xc0001e27e0)\n        /home/smoyer1/go/pkg/mod/github.com/godbus/dbus@v0.0.0-20190726142602-4481cbc300e2/conn.go:294 +0x3b\ncreated by github.com/godbus/dbus.(*Conn).Auth\n        /home/smoyer1/go/pkg/mod/github.com/godbus/dbus@v0.0.0-20190726142602-4481cbc300e2/auth.go:118 +0x9ed\n\ngoroutine 13 [semacquire, 10 minutes]:\nsync.runtime_SemacquireMutex(0x40f6a7?, 0x10?, 0x1130dc0?)\n        /opt/go/1.18.2/src/runtime/sema.go:71 +0x25\nsync.(*RWMutex).Lock(0x13723d0?)\n        /opt/go/1.18.2/src/sync/rwmutex.go:144 +0x71\ngithub.com/MichaelMure/git-bug/cache.(*RepoCache).ResolveBug(0xc00013a3f0, {0xc000432840, 0x40})\n        /home/smoyer1/git/git-bug/cache/repo_cache_bug.go:163 +0x18f\ngithub.com/MichaelMure/git-bug/cache.(*RepoCache).ResolveBugMatcher(0x7f6f4d3b85b8?, 0x47591e?)\n        /home/smoyer1/git/git-bug/cache/repo_cache_bug.go:236 +0x47\ngithub.com/MichaelMure/git-bug/cache.(*RepoCache).ResolveBugPrefix(0x200?, {0xc000036fc0?, 0xc0004a5050?})\n        /home/smoyer1/git/git-bug/cache/repo_cache_bug.go:209 +0x48\ngithub.com/MichaelMure/git-bug/cache.(*RepoCache).RemoveBug(0xc00013a3f0, {0xc000036fc0?, 0x11c4997?})\n        /home/smoyer1/git/git-bug/cache/repo_cache_bug.go:504 +0x75\ngithub.com/MichaelMure/git-bug/commands.runRm(0xc0004411c0, {0xc000128550, 0x1361600?, 0xc000010018?})\n        /home/smoyer1/git/git-bug/commands/rm.go:34 +0x65\ngithub.com/MichaelMure/git-bug/commands.newRmCommand.func1(0xc0001f9d20?, {0xc000128550?, 0xc000010018?, 0xc0003807e0?})\n        /home/smoyer1/git/git-bug/commands/rm.go:18 +0x2c\ngithub.com/MichaelMure/git-bug/commands.closeBackend.func1(0xc00045e280?, {0xc000128550, 0x1, 0x1})\n        /home/smoyer1/git/git-bug/commands/env.go:161 +0xd6\ngithub.com/spf13/cobra.(*Command).execute(0xc00045e280, {0xc000128520, 0x1, 0x1})\n        /home/smoyer1/go/pkg/mod/github.com/spf13/cobra@v1.4.0/command.go:856 +0x67c\ngithub.com/spf13/cobra.(*Command).ExecuteC(0xc000412280)\n        /home/smoyer1/go/pkg/mod/github.com/spf13/cobra@v1.4.0/command.go:974 +0x3b4\ngithub.com/spf13/cobra.(*Command).Execute(...)\n        /home/smoyer1/go/pkg/mod/github.com/spf13/cobra@v1.4.0/command.go:902\ngithub.com/spf13/cobra.(*Command).ExecuteContext(...)\n        /home/smoyer1/go/pkg/mod/github.com/spf13/cobra@v1.4.0/command.go:895\ngithub.com/MichaelMure/git-bug/commands_test.(*testEnv).Execute(0xc000462360?, 0xc00030d380?)\n        /home/smoyer1/git/git-bug/commands/root_test.go:60 +0xa5\ngithub.com/MichaelMure/git-bug/commands_test.TestRm(0xc00030d380)\n        /home/smoyer1/git/git-bug/commands/rm_test.go:13 +0xce\ntesting.tRunner(0xc00030d380, 0x1242530)\n        /opt/go/1.18.2/src/testing/testing.go:1439 +0x102\ncreated by testing.(*T).Run\n        /opt/go/1.18.2/src/testing/testing.go:1486 +0x35f\n\ngoroutine 19 [semacquire, 3 minutes]:\nsync.runtime_SemacquireMutex(0x48233b?, 0x6d?, 0x1?)\n        /opt/go/1.18.2/src/runtime/sema.go:71 +0x25\nsync.(*Mutex).lockSlow(0xc00013a418)\n        /opt/go/1.18.2/src/sync/mutex.go:162 +0x165\nsync.(*Mutex).Lock(...)\n        /opt/go/1.18.2/src/sync/mutex.go:81\nsync.(*RWMutex).Lock(0x0?)\n        /opt/go/1.18.2/src/sync/rwmutex.go:139 +0x36\ngithub.com/MichaelMure/git-bug/cache.(*RepoCache).Close(0xc00013a3f0)\n        /home/smoyer1/git/git-bug/cache/repo_cache.go:152 +0x45\ngithub.com/MichaelMure/git-bug/commands.loadBackend.func1.1.1()\n        /home/smoyer1/git/git-bug/commands/env.go:120 +0x45\ngithub.com/MichaelMure/git-bug/util/interrupt.clean()\n        /home/smoyer1/git/git-bug/util/interrupt/cleaner.go:76 +0xe5\ngithub.com/MichaelMure/git-bug/util/interrupt.RegisterCleaner.func2()\n        /home/smoyer1/git/git-bug/util/interrupt/cleaner.go:57 +0xd1\ncreated by github.com/MichaelMure/git-bug/util/interrupt.RegisterCleaner\n        /home/smoyer1/git/git-bug/util/interrupt/cleaner.go:51 +0x245\n\ngoroutine 35 [syscall, 3 minutes]:\nos/signal.signal_recv()\n        /opt/go/1.18.2/src/runtime/sigqueue.go:151 +0x2f\nos/signal.loop()\n        /opt/go/1.18.2/src/os/signal/signal_unix.go:23 +0x19\ncreated by os/signal.Notify.func1.1\n        /opt/go/1.18.2/src/os/signal/signal.go:151 +0x2a\nFAIL    github.com/MichaelMure/git-bug/commands600.120s\nFAIL\nsmoyer1@smoyer1-carbon:~/git/git-bug$ \n'''\n\nHopefully I'll have a solution (and add the appropriate assertions for the `rm \u003cbugID\u003e` test) in the next couple days (weekend and holiday here).","files":null},{"type":3,"timestamp":1653751081,"nonce":"VE+cAGn62VasqWwtf1jVRCzkbAY=","metadata":{"github-id":"IC_kwDOCGKeh85D91NX","github-url":"https://github.com/git-bug/git-bug/issues/778#issuecomment-1140282199"},"message":"@MichaelMure - This appears to be failing because `RepoCache.RemoveBug()` grabs a read-lock when calling `RepoCache.ResolveBugPrefix()` but the underlying code called from that method already locks/unlocks the cache as needed.  Removing the `RLock` on `repo_cache_bug.go:502` does indeed solve the problem but I'd like a second set of eyes to verify that there is already sufficient locking when resolving the bug prefix.","files":null}]}