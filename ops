{"author":{"id":"4d85ccdde3ad47c902de21b580354b67ed0cb07caa04e32d04ea93112f7f027e"},"ops":[{"type":3,"timestamp":1747071231,"nonce":"cfQ7oA3hMLzf/TBs7bmyb7e8XOU=","metadata":{"github-id":"IC_kwDOCGKeh86rRKW2","github-url":"https://github.com/git-bug/git-bug/issues/1142#issuecomment-2873402806"},"message":"@blumf yes, some windows behavior like that is likely to be the root cause here, and if so, we'd find this deeper within `go-git` (when it's actually creating the pack and object). nothing grabbed my attention yesterday when i stepped through the `git-bug-bug-new` workflow, but i could have missed something, as i'm not intimately familiar with the library yet (my existing usage of go-git has left me somewhat frustrated by its divergence from git's own behaviors, and puzzled at why golang doesn't have a better libgit2 module).\n\ni was able to locate the windows license i used a handful of years ago (yay password managers, even if you do forget the item name). i'm going to bump up the priority on this, since it's a blocking issue for windows users. i'll be looking into this issue over the next week and will hopefully come back to this issue with much more (useful) information (and a fix).","files":null},{"type":5,"timestamp":1747071274,"nonce":"vNY5nuljs6P+furMf/VlQ7lZ2Lg=","metadata":{"github-id":"UNLE_lADOCGKeh86BtRiozwAAAAQaSzfb"},"added":[],"removed":["priority/backlog"]},{"type":5,"timestamp":1747071274,"nonce":"axzBITRRgju345FIZLvnjDDggVQ=","metadata":{"github-id":"LE_lADOCGKeh86BtRiozwAAAAQaSzfj"},"added":["priority/important-soon"],"removed":[]}]}