{"author":{"id":"788581d40344e8e379d069717fdefef9e36e35fa2ae3837d616abc46caa14ea5"},"ops":[{"type":3,"timestamp":1619195216,"nonce":"Emhx2BWNjTKZrTgMhpgnR0ens7Y=","metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDgyNTc3MjYyNA==","github-url":"https://github.com/git-bug/git-bug/issues/642#issuecomment-825772624"},"message":"Ah I know where TestUser comes. I know where the TestUser originates from. It is also used within my `git config user.name`.","files":null},{"type":6,"timestamp":1619195241,"nonce":"YD7ZigRT2z1UiPRpwRkFmXWO9Gw=","metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6NDU0NTg0ODY0"},"target":"0f45ed287c0d6d22daa973c0eabe4ec33f7e9874f6fad15bcbed30fb2e78c306","message":"Ah. I know where TestUser originates from. It is also used within my `git config user.name`.","files":null},{"type":6,"timestamp":1619260437,"nonce":"iKhYOic2ctEW2yC+IqPIMd5Uv5k=","metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6NDU0NzI4NTg5"},"target":"0f45ed287c0d6d22daa973c0eabe4ec33f7e9874f6fad15bcbed30fb2e78c306","message":"~Ah. I know where TestUser originates from. It is also used within my `git config user.name`.~\n\nSomehow I got it to work. But I'm not convinced. I'll investigate some more.","files":null},{"type":6,"timestamp":1619277751,"nonce":"WC1zonoKumsqJPs4WArodDNBGPk=","metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6NDU0NzQ3MzQ5"},"target":"0f45ed287c0d6d22daa973c0eabe4ec33f7e9874f6fad15bcbed30fb2e78c306","message":"~Ah. I know where TestUser originates from. It is also used within my `git config user.name`.~\n\n~Update: Somehow I got it to work. But I'm not convinced. I'll investigate some more.~\nUpdate: I have the feeling, that I never got it to work properly :grimacing:","files":null},{"type":6,"timestamp":1619280163,"nonce":"uv0PvPpDaFeGMpEEYRXNT3IgVoQ=","metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6NDU0NzUwODkw"},"target":"0f45ed287c0d6d22daa973c0eabe4ec33f7e9874f6fad15bcbed30fb2e78c306","message":"~Ah. I know where TestUser originates from. It is also used within my `git config user.name`.~\n\n~Update: Somehow I got it to work. But I'm not convinced. I'll investigate some more.~\n~Update: I have the feeling, that I never got it to work properly :grimacing: ~\nUpdate: I think I know where this behavior comes from. Will investigate further.","files":null},{"type":6,"timestamp":1619280173,"nonce":"GAkuTYD8aQP90rbtXT0PXr92DV0=","metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6NDU0NzUwOTA2"},"target":"0f45ed287c0d6d22daa973c0eabe4ec33f7e9874f6fad15bcbed30fb2e78c306","message":"~Ah. I know where TestUser originates from. It is also used within my `git config user.name`.~\n\n~Update: Somehow I got it to work. But I'm not convinced. I'll investigate some more.~\n~Update: I have the feeling, that I never got it to work properly :grimacing:~\nUpdate: I think I know where this behavior comes from. Will investigate further.","files":null},{"type":3,"timestamp":1619291959,"nonce":"hfDR9iBK/B1kNbfvjcqhcMTldUM=","metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDgyNjE0MTAwNg==","github-url":"https://github.com/git-bug/git-bug/issues/642#issuecomment-826141006"},"message":"Okey got the error. I'll try to explain what happens:\nThe github bridge adds a Metadata field (github-login) to currently used identity. (By doing so the bridge assumes, that my current identity matches the user of my github account.)\nWhile importing issues, the bridge checks, if an identity already exists. Otherwise the identity will be created.\nThis is done via a [cache lookup](https://github.com/MichaelMure/git-bug/blob/master/bridge/github/import.go#L554), of an identity with the github-login matching those of the issue author.\n\nProblem: The bridge has assigned my current identity (TestUser) the github-login metadata and so the lookup will return the TestUser identity, instead of creating another identity with the name Sascha (my _real_ GitHub identity).\n\nHow to solve this problem?\n1. Check if the identity returned from the cache has the same name as the current identity. If the names don't match, create a new identity from the imported issue otherwise reuse the already existing identity.\n    This introduces another error, as there are now two identities with the same login metadata.\n    The identity used when `bridge configure` was invoked (TestUser) and the new imported identity from the issue (Sascha).\n2. Make sure, that the `git config user.name` matches the name of the GitHub identity.\n    This will certainly become a problem, when multiple bridges are used. E.g.\n    My GitLab account might not have the same username as my GitHub account, yet I have to choose one under which git-bug create bugs.\n3. The bridge should never assign the github-login metadata field to the currently used identity.\n    Then all issues should always have the proper author. Though the user has to make sure, to correct the `git config user.name`.\n4. This is not a bug. My currently currently used identity is an aggregate of all my other identities, which just might have different usernames. When importing bugs, all bugs of my other identities are displayed via my \"git-bug\" identity. When I create a bug and export to GitHub and GitLab, both should then have the name used for the respective service. \nSuppose that I have the following usernames:\n\n  GitHub -\u003e Sascha\n  GitLab -\u003eFoobar\n  git-bug -\u003e TestUser\n\nWithin git-bug, the bugs of my other identities are displayed as \"TestUser\". After exporting the bugs to GitHub, the author should be \"Sascha\" and analog for GitLab \"Foobar\". I think this is a fitting model. Maybe requires some explaining in the ReadMe?","files":null},{"type":6,"timestamp":1619292071,"nonce":"OmpNuRfPyT0xJfo298O4FkLBIA4=","metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6NDU0NzY1MTg3"},"target":"67683b829092cd98dc75fe04949c60a016dc7d632e03213106a2e21afefbbf1d","message":"Okey got the error. I'll try to explain what happens:\nThe github bridge adds a Metadata field (github-login) to currently used identity. (By doing so the bridge assumes, that my current identity matches the user of my github account.)\nWhile importing issues, the bridge checks, if an identity already exists. Otherwise the identity will be created.\nThis is done via a [cache lookup](https://github.com/MichaelMure/git-bug/blob/master/bridge/github/import.go#L554), of an identity with the github-login matching those of the issue author.\n\nProblem: The bridge has assigned my current identity (TestUser) the github-login metadata and so the lookup will return the TestUser identity, instead of creating another identity with the name Sascha (my _real_ GitHub identity).\n\nHow to solve this problem?\n1. Check if the identity returned from the cache has the same name as the current identity. If the names don't match, create a new identity from the imported issue otherwise reuse the already existing identity.\n    This introduces another error, as there are now two identities with the same login metadata.\n    The identity used when `bridge configure` was invoked (TestUser) and the new imported identity from the issue (Sascha).\n2. Make sure, that the `git config user.name` matches the name of the GitHub identity.\n    This will certainly become a problem, when multiple bridges are used. E.g.\n    My GitLab account might not have the same username as my GitHub account, yet I have to choose one under which git-bug create bugs.\n3. The bridge should never assign the github-login metadata field to the currently used identity.\n    Then all issues should always have the proper author. Though the user has to make sure, to correct the `git config user.name`.\n4. This is not a bug. My currently currently used identity is an aggregate of all my other identities, which just might have different usernames. When importing bugs, all bugs of my other identities are displayed via my \"git-bug\" identity. When I create a bug and export to GitHub and GitLab, both should then have the name used for the respective service. \nSuppose that I have the following usernames:\n\n  GitHub -\u003e Sascha\n  GitLab -\u003eFoobar\n  git-bug -\u003e TestUser\n\nWithin git-bug, the bugs of my other identities are displayed as \"TestUser\". After exporting the bugs to GitHub, the author should be \"Sascha\" and analog for GitLab \"Foobar\". I think this is a fitting model. Maybe requires some explaining in the ReadMe?\n\n~ I hope that this wall of text is clear enough. :grimacing: ~","files":null},{"type":6,"timestamp":1619292091,"nonce":"9IBicBKgWDsIm7wvSGSdJlm+xbQ=","metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6NDU0NzY1MjEx"},"target":"67683b829092cd98dc75fe04949c60a016dc7d632e03213106a2e21afefbbf1d","message":"Okey got the error. I'll try to explain what happens:\nThe github bridge adds a Metadata field (github-login) to currently used identity. (By doing so the bridge assumes, that my current identity matches the user of my github account.)\nWhile importing issues, the bridge checks, if an identity already exists. Otherwise the identity will be created.\nThis is done via a [cache lookup](https://github.com/MichaelMure/git-bug/blob/master/bridge/github/import.go#L554), of an identity with the github-login matching those of the issue author.\n\nProblem: The bridge has assigned my current identity (TestUser) the github-login metadata and so the lookup will return the TestUser identity, instead of creating another identity with the name Sascha (my _real_ GitHub identity).\n\nHow to solve this problem?\n1. Check if the identity returned from the cache has the same name as the current identity. If the names don't match, create a new identity from the imported issue otherwise reuse the already existing identity.\n    This introduces another error, as there are now two identities with the same login metadata.\n    The identity used when `bridge configure` was invoked (TestUser) and the new imported identity from the issue (Sascha).\n2. Make sure, that the `git config user.name` matches the name of the GitHub identity.\n    This will certainly become a problem, when multiple bridges are used. E.g.\n    My GitLab account might not have the same username as my GitHub account, yet I have to choose one under which git-bug create bugs.\n3. The bridge should never assign the github-login metadata field to the currently used identity.\n    Then all issues should always have the proper author. Though the user has to make sure, to correct the `git config user.name`.\n4. This is not a bug. My currently currently used identity is an aggregate of all my other identities, which just might have different usernames. When importing bugs, all bugs of my other identities are displayed via my \"git-bug\" identity. When I create a bug and export to GitHub and GitLab, both should then have the name used for the respective service. \nSuppose that I have the following usernames:\n\n  GitHub -\u003e Sascha\n  GitLab -\u003eFoobar\n  git-bug -\u003e TestUser\n\nWithin git-bug, the bugs of my other identities are displayed as \"TestUser\". After exporting the bugs to GitHub, the author should be \"Sascha\" and analog for GitLab \"Foobar\". I think this is a fitting model. Maybe requires some explaining in the ReadMe?\n\n~ I hope that this wall of text is understandable. :grimacing: ~","files":null}]}