{"author":{"id":"603472e3a86fab31c54777a9a2f5c5224da3b77b7103312c5af0680960e61c08"},"ops":[{"type":6,"timestamp":1739504854,"nonce":"Giyc/OyRsglecO3b5z3E29mRQtA=","metadata":{"github-id":"UCE_lAHOCGKeh850vJz8znHA490"},"target":"c2c63f9e71eef310348cf2736abbb6a95310e41aa7314ad5265e10db6227c7cd","message":"https://github.com/git-bug/git-bug/blob/d499b6e9d3333334614924669b74640a2d0b5485/util/text/validate.go#L19-L34\n\n\n\ndoesn't check for invalid UTF-8, so this string would be returned as safe:\n\n~~~\n\"\\xA0\\xA1\"\n~~~\n\nalso doesn't catch all control characters, so this would also be returned as safe:\n\n~~~\n\"\\u200E\"\n~~~\n\nimproved code:\n\n~~~go\npackage unicode\n\nimport (\n   \"unicode\"\n   \"unicode/utf8\"\n)\n\nfunc binary(src []byte) bool {\n   for len(src) \u003e= 1 {\n      r, size := utf8.DecodeRune(src)\n      if r == utf8.RuneError {\n         if size == 1 {\n            return true\n         }\n      }\n      if unicode.Is(unicode.C, r) {\n         return true\n      }\n      src = src[size:]\n   }\n   return false\n}\n~~~","files":null}]}