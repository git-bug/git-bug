{"author":{"id":"3998add589f6a09cf4bdf0e85e5481d2c48b8a757edd699a79a0c929ab5005db"},"ops":[{"type":3,"timestamp":1535476298,"nonce":"svZKkaTvkod7B9YZSB6dGJju7Q0=","metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQxNjY2NjgxMA==","github-url":"https://github.com/git-bug/git-bug/issues/2#issuecomment-416666810"},"message":"@jlegeny that's a good point. Technically if possible to implement `status` and `reset` by comparing or copying the references in `refs/bugs/*` and `refs/remotes/\u003cremote\u003e/bugs/*`. That also mean that the actual status can be different if you use multiple remote.","files":null},{"type":3,"timestamp":1536252163,"nonce":"gE9y14/kxgIyahBd71xyl4wswVA=","metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQxOTE2MjM1MQ==","github-url":"https://github.com/git-bug/git-bug/issues/2#issuecomment-419162351"},"message":"With the previous comments, I tried to summon my inner UX guy and devise a plan:\n\n## Current situation\n\n- `git bug`: show help\n\n\n- `git bug ls`: list bugs\n- `git bug push [\u003cremote\u003e]`: push to remote\n- `git bug pull [\u003cremote\u003e]`: pull from remote\n- `git bug termui`: launch the terminal UI\n- `git bug webui [-p 1234]`: launch the web UI\n\n\n- `git bug new [-t \"title\"] [-m \"message\"]`: new bug\n- `git bug comment \u003cid\u003e [-m \"message\"]`: add comment\n- `git bug label \u003cid\u003e [-r] [\u003clabel\u003e...]`: add/remove labels\n- `git bug open \u003cid\u003e`: change status to OPEN\n- `git bug close \u003cid\u003e`: change status to CLOSE\n\n## Problems/questions\n\n- missing `git bug title`\n- should `git bug` run the termui instead of showing the help ?\n- merge `open` and `close` into a `status` command ?\n- `new` is not a verb\n- `label` has a different UX\n- can't have a select mechanism with the current `label` --\u003e what is the id, what is a label ?\n- is it better to favor short commands or complete set of features for the CLI ? (e.g. `git bug title` to edit, or `git bug title` to show the current title and `git bug title change` to change it) ?\n\n## New shinny plan\n\n#### As before\n\n- `git bug push [\u003cremote\u003e]`: push to remote\n- `git bug pull [\u003cremote\u003e]`: pull from remote\n- `git bug termui`: launch the terminal UI\n- `git bug webui [-p 1234]`: launch the web UI\n\n#### Changed\n\n- `git bug`: list bugs\n- `git bug comment [\u003cid\u003e]`: show all comments\n- `git bug comment add [\u003cid\u003e] [-m \"message\"]`: add comment\n- `git bug label [\u003cid\u003e]`: show all labels\n- `git bug label add [\u003cid\u003e] \u003clabel\u003e...`: add labels\n- `git bug label rm [\u003cid\u003e] \u003clabel\u003e...`: remove labels\n\n#### Removed\n\n- `git bug new`: renamed to `add`\n- `git bug ls`: removed in favor of `git bug`\n\n#### Added\n\n- `git bug add [-t \"title\"] [-m \"message\"]`: new bug\n- `git bug title [\u003cid\u003e]`: show the title\n- `git bug title edit [\u003cid\u003e]`: edit the title\n- `git bug status [\u003cid\u003e] [\u003cremote\u003e]`: show what bugs have been added/changed regarding the default or explicit remote. No select mechanism here, the \u003cid\u003e is a filter.\n- `git bug status open [\u003cid\u003e]`: change status to open\n- `git bug status close [\u003cid\u003e]`: change status to closed\n- `git bug reset \u003cid\u003e [\u003cremote\u003e]`: clear the changes of a bug to match the bug of a remote\n- `git bug rm [\u003cremote\u003e]`: remove a bug locally or on a remote \n\n\n## select mechanism\n\n- `git bug select \u003cid\u003e`: select a bug for implicit editing later\n- using a command with an explicit id discard the selected id\n- automatic select with `new/add` ?\n- instead of an id, a filter could be used (e.g.: `git select \"UX refinement\"`), and it would work if only one bug match.\n- should display a summary of the selected bug when successfully selecting to avoid mistakes\n- there is still a potential conflict when a command has both an id and arbitrary args (e.g. `git bug label add`). That will require a test to see if the first arg could be a bug id or a prefix to a bug id. There is really unlikely case where it could be a problem though: `git bug label add cafe` when we have a bug with an id starting with `cafe`.\n\nWhat do you all think ?","files":null},{"type":6,"timestamp":1537100107,"nonce":"W9LqJfmsTTtnYifbsJdXZSlajj4=","metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDEzMDM3OTc3Ng=="},"target":"03c94bb7fa9f80a6df9f9e5ef2e3305fca8115e0da012d29cfd1ffb51eb885e5","message":"With the previous comments, I tried to summon my inner UX guy and devise a plan:\n\n## Current situation\n\n- `git bug`: show help\n\n\n- `git bug ls`: list bugs\n- `git bug push [\u003cremote\u003e]`: push to remote\n- `git bug pull [\u003cremote\u003e]`: pull from remote\n- `git bug termui`: launch the terminal UI\n- `git bug webui [-p 1234]`: launch the web UI\n\n\n- `git bug new [-t \"title\"] [-m \"message\"]`: new bug\n- `git bug comment \u003cid\u003e [-m \"message\"]`: add comment\n- `git bug label \u003cid\u003e [-r] [\u003clabel\u003e...]`: add/remove labels\n- `git bug open \u003cid\u003e`: change status to OPEN\n- `git bug close \u003cid\u003e`: change status to CLOSE\n\n## Problems/questions\n\n- missing `git bug title`\n- should `git bug` run the termui instead of showing the help ?\n- merge `open` and `close` into a `status` command ?\n- `new` is not a verb\n- `label` has a different UX\n- can't have a select mechanism with the current `label` --\u003e what is the id, what is a label ?\n- is it better to favor short commands or complete set of features for the CLI ? (e.g. `git bug title` to edit, or `git bug title` to show the current title and `git bug title change` to change it) ?\n\n## New shinny plan\n\n#### As before\n\n- `git bug push [\u003cremote\u003e]`: push to remote\n- `git bug pull [\u003cremote\u003e]`: pull from remote\n- `git bug termui`: launch the terminal UI\n- `git bug webui [-p 1234]`: launch the web UI\n\n#### Changed\n\n- `git bug`: list bugs\n- `git bug comment [\u003cid\u003e]`: show all comments\n- `git bug comment add [\u003cid\u003e] [-m \"message\"]`: add comment\n- `git bug label [\u003cid\u003e]`: show all labels\n- `git bug label add [\u003cid\u003e] \u003clabel\u003e...`: add labels\n- `git bug label rm [\u003cid\u003e] \u003clabel\u003e...`: remove labels\n\n#### Removed\n\n- `git bug new`: renamed to `add`\n- `git bug ls`: removed in favor of `git bug`\n\n#### Added\n\n- `git bug add [-t \"title\"] [-m \"message\"]`: new bug\n- `git bug title [\u003cid\u003e]`: show the title\n- `git bug title edit [\u003cid\u003e]`: edit the title\n- `git bug diff [\u003cid\u003e] [\u003cremote\u003e]`: show what bugs have been added/changed regarding the default or explicit remote. No select mechanism here, the \u003cid\u003e is a filter.\n- `git bug status`: show the current status\n- `git bug status open [\u003cid\u003e]`: change status to open\n- `git bug status close [\u003cid\u003e]`: change status to closed\n- `git bug reset \u003cid\u003e [\u003cremote\u003e]`: clear the changes of a bug to match the bug of a remote\n- `git bug rm [\u003cremote\u003e]`: remove a bug locally or on a remote \n\n\n## select mechanism\n\n- `git bug select \u003cid\u003e`: select a bug for implicit editing later\n- using a command with an explicit id discard the selected id\n- automatic select with `new/add` ?\n- instead of an id, a filter could be used (e.g.: `git select \"UX refinement\"`), and it would work if only one bug match.\n- should display a summary of the selected bug when successfully selecting to avoid mistakes\n- there is still a potential conflict when a command has both an id and arbitrary args (e.g. `git bug label add`). That will require a test to see if the first arg could be a bug id or a prefix to a bug id. There is really unlikely case where it could be a problem though: `git bug label add cafe` when we have a bug with an id starting with `cafe`.\n\nWhat do you all think ?","files":null},{"type":6,"timestamp":1537100366,"nonce":"HM4lNYl5DV4AaZNx2D4HNhv9zF8=","metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDEzMDM4MDA0Mw=="},"target":"03c94bb7fa9f80a6df9f9e5ef2e3305fca8115e0da012d29cfd1ffb51eb885e5","message":"With the previous comments, I tried to summon my inner UX guy and devise a plan:\n\n## Current situation\n\n- `git bug`: show help\n\n\n- `git bug ls`: list bugs\n- `git bug push [\u003cremote\u003e]`: push to remote\n- `git bug pull [\u003cremote\u003e]`: pull from remote\n- `git bug termui`: launch the terminal UI\n- `git bug webui [-p 1234]`: launch the web UI\n\n\n- `git bug new [-t \"title\"] [-m \"message\"]`: new bug\n- `git bug comment \u003cid\u003e [-m \"message\"]`: add comment\n- `git bug label \u003cid\u003e [-r] [\u003clabel\u003e...]`: add/remove labels\n- `git bug open \u003cid\u003e`: change status to OPEN\n- `git bug close \u003cid\u003e`: change status to CLOSE\n\n## Problems/questions\n\n- missing `git bug title`\n- should `git bug` run the termui instead of showing the help ?\n- merge `open` and `close` into a `status` command ?\n- `new` is not a verb\n- `label` has a different UX\n- can't have a select mechanism with the current `label` --\u003e what is the id, what is a label ?\n- is it better to favor short commands or complete set of features for the CLI ? (e.g. `git bug title` to edit, or `git bug title` to show the current title and `git bug title change` to change it) ?\n\n## New shinny plan\n\n#### As before\n\n- `git bug push [\u003cremote\u003e]`: push to remote\n- `git bug pull [\u003cremote\u003e]`: pull from remote\n- `git bug termui`: launch the terminal UI\n- `git bug webui [-p 1234]`: launch the web UI\n\n#### Changed\n\n- `git bug`: list bugs\n- `git bug comment [\u003cid\u003e]`: show all comments\n- `git bug comment add [\u003cid\u003e] [-m \"message\"]`: add comment\n- `git bug label [\u003cid\u003e]`: show all labels\n- `git bug label add [\u003cid\u003e] \u003clabel\u003e...`: add labels\n- `git bug label rm [\u003cid\u003e] \u003clabel\u003e...`: remove labels\n\n#### Removed\n\n- `git bug new`: renamed to `add`\n- `git bug ls`: removed in favor of `git bug`\n\n#### Added\n\n- `git bug add [-t \"title\"] [-m \"message\"]`: new bug\n- `git bug title [\u003cid\u003e]`: show the title\n- `git bug title edit [\u003cid\u003e]`: edit the title\n- `git bug diff [\u003cid\u003e] [\u003cremote\u003e]`: show what bugs have been added/changed regarding the default or explicit remote. No select mechanism here, the \u003cid\u003e is a filter.\n- `git bug status [\u003cid\u003e]`: show the current status\n- `git bug status open [\u003cid\u003e]`: change status to open\n- `git bug status close [\u003cid\u003e]`: change status to closed\n- `git bug reset \u003cid\u003e [\u003cremote\u003e]`: clear the changes of a bug to match the bug of a remote\n- `git bug rm \u003cid\u003e [\u003cremote\u003e]`: remove a bug locally or on a remote \n\n\n## select mechanism\n\n- `git bug select \u003cid\u003e`: select a bug for implicit editing later\n- using a command with an explicit id discard the selected id\n- automatic select with `new/add` ?\n- instead of an id, a filter could be used (e.g.: `git select \"UX refinement\"`), and it would work if only one bug match.\n- should display a summary of the selected bug when successfully selecting to avoid mistakes\n- there is still a potential conflict when a command has both an id and arbitrary args (e.g. `git bug label add`). That will require a test to see if the first arg could be a bug id or a prefix to a bug id. There is really unlikely case where it could be a problem though: `git bug label add cafe` when we have a bug with an id starting with `cafe`.\n\nWhat do you all think ?","files":null},{"type":6,"timestamp":1537101148,"nonce":"3dnY3wG+A8GRVu1FxizCFCnevck=","metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDEzMDM4MTU5NQ=="},"target":"03c94bb7fa9f80a6df9f9e5ef2e3305fca8115e0da012d29cfd1ffb51eb885e5","message":"With the previous comments, I tried to summon my inner UX guy and devise a plan:\n\n## Current situation\n\n- `git bug`: show help\n\n\n- `git bug ls`: list bugs\n- `git bug push [\u003cremote\u003e]`: push to remote\n- `git bug pull [\u003cremote\u003e]`: pull from remote\n- `git bug termui`: launch the terminal UI\n- `git bug webui [-p 1234]`: launch the web UI\n\n\n- `git bug new [-t \"title\"] [-m \"message\"]`: new bug\n- `git bug comment \u003cid\u003e [-m \"message\"]`: add comment\n- `git bug label \u003cid\u003e [-r] [\u003clabel\u003e...]`: add/remove labels\n- `git bug open \u003cid\u003e`: change status to OPEN\n- `git bug close \u003cid\u003e`: change status to CLOSE\n\n## Problems/questions\n\n- missing `git bug title`\n- should `git bug` run the termui instead of showing the help ?\n- merge `open` and `close` into a `status` command ?\n- `new` is not a verb\n- `label` has a different UX\n- can't have a select mechanism with the current `label` --\u003e what is the id, what is a label ?\n- is it better to favor short commands or complete set of features for the CLI ? (e.g. `git bug title` to edit, or `git bug title` to show the current title and `git bug title change` to change it) ?\n\n## New shinny plan\n\n#### As before\n\n- `git bug push [\u003cremote\u003e]`: push to remote\n- `git bug pull [\u003cremote\u003e]`: pull from remote\n- `git bug termui`: launch the terminal UI\n- `git bug webui [-p 1234]`: launch the web UI\n\n#### Changed\n\n- [ ] `git bug`: list bugs\n- [x] `git bug comment [\u003cid\u003e]`: show all comments\n- [x] `git bug comment add [\u003cid\u003e] [-m \"message\"]`: add comment\n- [ ] `git bug label [\u003cid\u003e]`: show all labels\n- [ ] `git bug label add [\u003cid\u003e] \u003clabel\u003e...`: add labels\n- [ ] `git bug label rm [\u003cid\u003e] \u003clabel\u003e...`: remove labels\n\n#### Removed\n\n- [x] `git bug new`: renamed to `add`\n- [ ] `git bug ls`: removed in favor of `git bug`\n\n#### Added\n\n- [x] `git bug add [-t \"title\"] [-m \"message\"]`: new bug\n- [x] `git bug title [\u003cid\u003e]`: show the title\n- [x] `git bug title edit [\u003cid\u003e]`: edit the title\n- [ ] `git bug diff [\u003cid\u003e] [\u003cremote\u003e]`: show what bugs have been added/changed regarding the default or explicit remote. No select mechanism here, the \u003cid\u003e is a filter.\n- [x] `git bug status [\u003cid\u003e]`: show the current status\n- [x] `git bug status open [\u003cid\u003e]`: change status to open\n- [x] `git bug status close [\u003cid\u003e]`: change status to closed\n- [ ] `git bug reset \u003cid\u003e [\u003cremote\u003e]`: clear the changes of a bug to match the bug of a remote\n- [ ] `git bug rm \u003cid\u003e [\u003cremote\u003e]`: remove a bug locally or on a remote \n\n\n## select mechanism\n\n- [ ] `git bug select \u003cid\u003e`: select a bug for implicit editing later\n- using a command with an explicit id discard the selected id\n- automatic select with `new/add` ?\n- instead of an id, a filter could be used (e.g.: `git select \"UX refinement\"`), and it would work if only one bug match.\n- should display a summary of the selected bug when successfully selecting to avoid mistakes\n- there is still a potential conflict when a command has both an id and arbitrary args (e.g. `git bug label add`). That will require a test to see if the first arg could be a bug id or a prefix to a bug id. There is really unlikely case where it could be a problem though: `git bug label add cafe` when we have a bug with an id starting with `cafe`.\n\nWhat do you all think ?","files":null},{"type":6,"timestamp":1537188308,"nonce":"dUwW1Wdmi0Naz5Tg1+UriWyL5qQ=","metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDEzMDU4NTg1MA=="},"target":"03c94bb7fa9f80a6df9f9e5ef2e3305fca8115e0da012d29cfd1ffb51eb885e5","message":"With the previous comments, I tried to summon my inner UX guy and devise a plan:\n\n## Current situation\n\n- `git bug`: show help\n\n\n- `git bug ls`: list bugs\n- `git bug push [\u003cremote\u003e]`: push to remote\n- `git bug pull [\u003cremote\u003e]`: pull from remote\n- `git bug termui`: launch the terminal UI\n- `git bug webui [-p 1234]`: launch the web UI\n\n\n- `git bug new [-t \"title\"] [-m \"message\"]`: new bug\n- `git bug comment \u003cid\u003e [-m \"message\"]`: add comment\n- `git bug label \u003cid\u003e [-r] [\u003clabel\u003e...]`: add/remove labels\n- `git bug open \u003cid\u003e`: change status to OPEN\n- `git bug close \u003cid\u003e`: change status to CLOSE\n\n## Problems/questions\n\n- missing `git bug title`\n- should `git bug` run the termui instead of showing the help ?\n- merge `open` and `close` into a `status` command ?\n- `new` is not a verb\n- `label` has a different UX\n- can't have a select mechanism with the current `label` --\u003e what is the id, what is a label ?\n- is it better to favor short commands or complete set of features for the CLI ? (e.g. `git bug title` to edit, or `git bug title` to show the current title and `git bug title change` to change it) ?\n\n## New shinny plan\n\n#### As before\n\n- `git bug push [\u003cremote\u003e]`: push to remote\n- `git bug pull [\u003cremote\u003e]`: pull from remote\n- `git bug termui`: launch the terminal UI\n- `git bug webui [-p 1234]`: launch the web UI\n\n#### Changed\n\n- [ ] `git bug`: list bugs\n- [x] `git bug comment [\u003cid\u003e]`: show all comments\n- [x] `git bug comment add [\u003cid\u003e] [-m \"message\"]`: add comment\n- [x] `git bug label [\u003cid\u003e]`: show all labels\n- [ ] `git bug label add [\u003cid\u003e] \u003clabel\u003e...`: add labels\n- [ ] `git bug label rm [\u003cid\u003e] \u003clabel\u003e...`: remove labels\n\n#### Removed\n\n- [x] `git bug new`: renamed to `add`\n- [ ] `git bug ls`: removed in favor of `git bug`\n\n#### Added\n\n- [x] `git bug add [-t \"title\"] [-m \"message\"]`: new bug\n- [x] `git bug title [\u003cid\u003e]`: show the title\n- [x] `git bug title edit [\u003cid\u003e]`: edit the title\n- [ ] `git bug diff [\u003cid\u003e] [\u003cremote\u003e]`: show what bugs have been added/changed regarding the default or explicit remote. No select mechanism here, the \u003cid\u003e is a filter.\n- [x] `git bug status [\u003cid\u003e]`: show the current status\n- [x] `git bug status open [\u003cid\u003e]`: change status to open\n- [x] `git bug status close [\u003cid\u003e]`: change status to closed\n- [ ] `git bug reset \u003cid\u003e [\u003cremote\u003e]`: clear the changes of a bug to match the bug of a remote\n- [ ] `git bug rm \u003cid\u003e [\u003cremote\u003e]`: remove a bug locally or on a remote \n\n\n## select mechanism\n\n- [ ] `git bug select \u003cid\u003e`: select a bug for implicit editing later\n- using a command with an explicit id discard the selected id\n- automatic select with `new/add` ?\n- instead of an id, a filter could be used (e.g.: `git select \"UX refinement\"`), and it would work if only one bug match.\n- should display a summary of the selected bug when successfully selecting to avoid mistakes\n- there is still a potential conflict when a command has both an id and arbitrary args (e.g. `git bug label add`). That will require a test to see if the first arg could be a bug id or a prefix to a bug id. There is really unlikely case where it could be a problem though: `git bug label add cafe` when we have a bug with an id starting with `cafe`.\n\nWhat do you all think ?","files":null},{"type":6,"timestamp":1537188309,"nonce":"fQmF8kg6AJt2ir3RcY+eg7op+iI=","metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDEzMDU4NTg1NA=="},"target":"03c94bb7fa9f80a6df9f9e5ef2e3305fca8115e0da012d29cfd1ffb51eb885e5","message":"With the previous comments, I tried to summon my inner UX guy and devise a plan:\n\n## Current situation\n\n- `git bug`: show help\n\n\n- `git bug ls`: list bugs\n- `git bug push [\u003cremote\u003e]`: push to remote\n- `git bug pull [\u003cremote\u003e]`: pull from remote\n- `git bug termui`: launch the terminal UI\n- `git bug webui [-p 1234]`: launch the web UI\n\n\n- `git bug new [-t \"title\"] [-m \"message\"]`: new bug\n- `git bug comment \u003cid\u003e [-m \"message\"]`: add comment\n- `git bug label \u003cid\u003e [-r] [\u003clabel\u003e...]`: add/remove labels\n- `git bug open \u003cid\u003e`: change status to OPEN\n- `git bug close \u003cid\u003e`: change status to CLOSE\n\n## Problems/questions\n\n- missing `git bug title`\n- should `git bug` run the termui instead of showing the help ?\n- merge `open` and `close` into a `status` command ?\n- `new` is not a verb\n- `label` has a different UX\n- can't have a select mechanism with the current `label` --\u003e what is the id, what is a label ?\n- is it better to favor short commands or complete set of features for the CLI ? (e.g. `git bug title` to edit, or `git bug title` to show the current title and `git bug title change` to change it) ?\n\n## New shinny plan\n\n#### As before\n\n- `git bug push [\u003cremote\u003e]`: push to remote\n- `git bug pull [\u003cremote\u003e]`: pull from remote\n- `git bug termui`: launch the terminal UI\n- `git bug webui [-p 1234]`: launch the web UI\n\n#### Changed\n\n- [ ] `git bug`: list bugs\n- [x] `git bug comment [\u003cid\u003e]`: show all comments\n- [x] `git bug comment add [\u003cid\u003e] [-m \"message\"]`: add comment\n- [x] `git bug label [\u003cid\u003e]`: show all labels\n- [x] `git bug label add [\u003cid\u003e] \u003clabel\u003e...`: add labels\n- [ ] `git bug label rm [\u003cid\u003e] \u003clabel\u003e...`: remove labels\n\n#### Removed\n\n- [x] `git bug new`: renamed to `add`\n- [ ] `git bug ls`: removed in favor of `git bug`\n\n#### Added\n\n- [x] `git bug add [-t \"title\"] [-m \"message\"]`: new bug\n- [x] `git bug title [\u003cid\u003e]`: show the title\n- [x] `git bug title edit [\u003cid\u003e]`: edit the title\n- [ ] `git bug diff [\u003cid\u003e] [\u003cremote\u003e]`: show what bugs have been added/changed regarding the default or explicit remote. No select mechanism here, the \u003cid\u003e is a filter.\n- [x] `git bug status [\u003cid\u003e]`: show the current status\n- [x] `git bug status open [\u003cid\u003e]`: change status to open\n- [x] `git bug status close [\u003cid\u003e]`: change status to closed\n- [ ] `git bug reset \u003cid\u003e [\u003cremote\u003e]`: clear the changes of a bug to match the bug of a remote\n- [ ] `git bug rm \u003cid\u003e [\u003cremote\u003e]`: remove a bug locally or on a remote \n\n\n## select mechanism\n\n- [ ] `git bug select \u003cid\u003e`: select a bug for implicit editing later\n- using a command with an explicit id discard the selected id\n- automatic select with `new/add` ?\n- instead of an id, a filter could be used (e.g.: `git select \"UX refinement\"`), and it would work if only one bug match.\n- should display a summary of the selected bug when successfully selecting to avoid mistakes\n- there is still a potential conflict when a command has both an id and arbitrary args (e.g. `git bug label add`). That will require a test to see if the first arg could be a bug id or a prefix to a bug id. There is really unlikely case where it could be a problem though: `git bug label add cafe` when we have a bug with an id starting with `cafe`.\n\nWhat do you all think ?","files":null},{"type":6,"timestamp":1537188311,"nonce":"LSOcymBdYEp9LQYLKvDJLqIX6q4=","metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDEzMDU4NTg2Ng=="},"target":"03c94bb7fa9f80a6df9f9e5ef2e3305fca8115e0da012d29cfd1ffb51eb885e5","message":"With the previous comments, I tried to summon my inner UX guy and devise a plan:\n\n## Current situation\n\n- `git bug`: show help\n\n\n- `git bug ls`: list bugs\n- `git bug push [\u003cremote\u003e]`: push to remote\n- `git bug pull [\u003cremote\u003e]`: pull from remote\n- `git bug termui`: launch the terminal UI\n- `git bug webui [-p 1234]`: launch the web UI\n\n\n- `git bug new [-t \"title\"] [-m \"message\"]`: new bug\n- `git bug comment \u003cid\u003e [-m \"message\"]`: add comment\n- `git bug label \u003cid\u003e [-r] [\u003clabel\u003e...]`: add/remove labels\n- `git bug open \u003cid\u003e`: change status to OPEN\n- `git bug close \u003cid\u003e`: change status to CLOSE\n\n## Problems/questions\n\n- missing `git bug title`\n- should `git bug` run the termui instead of showing the help ?\n- merge `open` and `close` into a `status` command ?\n- `new` is not a verb\n- `label` has a different UX\n- can't have a select mechanism with the current `label` --\u003e what is the id, what is a label ?\n- is it better to favor short commands or complete set of features for the CLI ? (e.g. `git bug title` to edit, or `git bug title` to show the current title and `git bug title change` to change it) ?\n\n## New shinny plan\n\n#### As before\n\n- `git bug push [\u003cremote\u003e]`: push to remote\n- `git bug pull [\u003cremote\u003e]`: pull from remote\n- `git bug termui`: launch the terminal UI\n- `git bug webui [-p 1234]`: launch the web UI\n\n#### Changed\n\n- [ ] `git bug`: list bugs\n- [x] `git bug comment [\u003cid\u003e]`: show all comments\n- [x] `git bug comment add [\u003cid\u003e] [-m \"message\"]`: add comment\n- [x] `git bug label [\u003cid\u003e]`: show all labels\n- [x] `git bug label add [\u003cid\u003e] \u003clabel\u003e...`: add labels\n- [x] `git bug label rm [\u003cid\u003e] \u003clabel\u003e...`: remove labels\n\n#### Removed\n\n- [x] `git bug new`: renamed to `add`\n- [ ] `git bug ls`: removed in favor of `git bug`\n\n#### Added\n\n- [x] `git bug add [-t \"title\"] [-m \"message\"]`: new bug\n- [x] `git bug title [\u003cid\u003e]`: show the title\n- [x] `git bug title edit [\u003cid\u003e]`: edit the title\n- [ ] `git bug diff [\u003cid\u003e] [\u003cremote\u003e]`: show what bugs have been added/changed regarding the default or explicit remote. No select mechanism here, the \u003cid\u003e is a filter.\n- [x] `git bug status [\u003cid\u003e]`: show the current status\n- [x] `git bug status open [\u003cid\u003e]`: change status to open\n- [x] `git bug status close [\u003cid\u003e]`: change status to closed\n- [ ] `git bug reset \u003cid\u003e [\u003cremote\u003e]`: clear the changes of a bug to match the bug of a remote\n- [ ] `git bug rm \u003cid\u003e [\u003cremote\u003e]`: remove a bug locally or on a remote \n\n\n## select mechanism\n\n- [ ] `git bug select \u003cid\u003e`: select a bug for implicit editing later\n- using a command with an explicit id discard the selected id\n- automatic select with `new/add` ?\n- instead of an id, a filter could be used (e.g.: `git select \"UX refinement\"`), and it would work if only one bug match.\n- should display a summary of the selected bug when successfully selecting to avoid mistakes\n- there is still a potential conflict when a command has both an id and arbitrary args (e.g. `git bug label add`). That will require a test to see if the first arg could be a bug id or a prefix to a bug id. There is really unlikely case where it could be a problem though: `git bug label add cafe` when we have a bug with an id starting with `cafe`.\n\nWhat do you all think ?","files":null},{"type":6,"timestamp":1537270136,"nonce":"rhZz1LpdJlzgNPjCb5MU6pQO1K8=","metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDEzMDk3NjU0Mg=="},"target":"03c94bb7fa9f80a6df9f9e5ef2e3305fca8115e0da012d29cfd1ffb51eb885e5","message":"With the previous comments, I tried to summon my inner UX guy and devise a plan:\n\n## Current situation\n\n- `git bug`: show help\n\n\n- `git bug ls`: list bugs\n- `git bug push [\u003cremote\u003e]`: push to remote\n- `git bug pull [\u003cremote\u003e]`: pull from remote\n- `git bug termui`: launch the terminal UI\n- `git bug webui [-p 1234]`: launch the web UI\n\n\n- `git bug new [-t \"title\"] [-m \"message\"]`: new bug\n- `git bug comment \u003cid\u003e [-m \"message\"]`: add comment\n- `git bug label \u003cid\u003e [-r] [\u003clabel\u003e...]`: add/remove labels\n- `git bug open \u003cid\u003e`: change status to OPEN\n- `git bug close \u003cid\u003e`: change status to CLOSE\n\n## Problems/questions\n\n- missing `git bug title`\n- should `git bug` run the termui instead of showing the help ?\n- merge `open` and `close` into a `status` command ?\n- `new` is not a verb\n- `label` has a different UX\n- can't have a select mechanism with the current `label` --\u003e what is the id, what is a label ?\n- is it better to favor short commands or complete set of features for the CLI ? (e.g. `git bug title` to edit, or `git bug title` to show the current title and `git bug title change` to change it) ?\n\n## New shinny plan\n\n#### As before\n\n- `git bug push [\u003cremote\u003e]`: push to remote\n- `git bug pull [\u003cremote\u003e]`: pull from remote\n- `git bug termui`: launch the terminal UI\n- `git bug webui [-p 1234]`: launch the web UI\n\n#### Changed\n\n- [ ] `git bug`: list bugs\n- [x] `git bug comment [\u003cid\u003e]`: show all comments\n- [x] `git bug comment add [\u003cid\u003e] [-m \"message\"]`: add comment\n- [x] `git bug label [\u003cid\u003e]`: show all labels\n- [x] `git bug label add [\u003cid\u003e] \u003clabel\u003e...`: add labels\n- [x] `git bug label rm [\u003cid\u003e] \u003clabel\u003e...`: remove labels\n\n#### Removed\n\n- [x] `git bug new`: renamed to `add`\n- [ ] `git bug ls`: removed in favor of `git bug`\n\n#### Added\n\n- [x] `git bug add [-t \"title\"] [-m \"message\"]`: new bug\n- [x] `git bug title [\u003cid\u003e]`: show the title\n- [x] `git bug title edit [\u003cid\u003e]`: edit the title\n- [ ] `git bug diff [\u003cid\u003e] [\u003cremote\u003e]`: show what bugs have been added/changed regarding the default or explicit remote. No select mechanism here, the \u003cid\u003e is a filter.\n- [x] `git bug status [\u003cid\u003e]`: show the current status\n- [x] `git bug status open [\u003cid\u003e]`: change status to open\n- [x] `git bug status close [\u003cid\u003e]`: change status to closed\n- [ ] `git bug reset \u003cid\u003e [\u003cremote\u003e]`: clear the changes of a bug to match the bug of a remote\n- [ ] `git bug rm \u003cid\u003e [\u003cremote\u003e]`: remove a bug locally or on a remote \n\n\n## select mechanism\n\n- [x] `git bug select \u003cid\u003e`: select a bug for implicit editing later\n- using a command with an explicit id discard the selected id\n- automatic select with `new/add` ?\n- instead of an id, a filter could be used (e.g.: `git select \"UX refinement\"`), and it would work if only one bug match.\n- should display a summary of the selected bug when successfully selecting to avoid mistakes\n- there is still a potential conflict when a command has both an id and arbitrary args (e.g. `git bug label add`). That will require a test to see if the first arg could be a bug id or a prefix to a bug id. There is really unlikely case where it could be a problem though: `git bug label add cafe` when we have a bug with an id starting with `cafe`.\n\nWhat do you all think ?","files":null},{"type":6,"timestamp":1537270376,"nonce":"vdLm/HPIcqLUNWwubr34qJ00Hm8=","metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDEzMDk3NzcxNA=="},"target":"03c94bb7fa9f80a6df9f9e5ef2e3305fca8115e0da012d29cfd1ffb51eb885e5","message":"With the previous comments, I tried to summon my inner UX guy and devise a plan:\n\n## Current situation\n\n- `git bug`: show help\n\n\n- `git bug ls`: list bugs\n- `git bug push [\u003cremote\u003e]`: push to remote\n- `git bug pull [\u003cremote\u003e]`: pull from remote\n- `git bug termui`: launch the terminal UI\n- `git bug webui [-p 1234]`: launch the web UI\n\n\n- `git bug new [-t \"title\"] [-m \"message\"]`: new bug\n- `git bug comment \u003cid\u003e [-m \"message\"]`: add comment\n- `git bug label \u003cid\u003e [-r] [\u003clabel\u003e...]`: add/remove labels\n- `git bug open \u003cid\u003e`: change status to OPEN\n- `git bug close \u003cid\u003e`: change status to CLOSE\n\n## Problems/questions\n\n- missing `git bug title`\n- should `git bug` run the termui instead of showing the help ?\n- merge `open` and `close` into a `status` command ?\n- `new` is not a verb\n- `label` has a different UX\n- can't have a select mechanism with the current `label` --\u003e what is the id, what is a label ?\n- is it better to favor short commands or complete set of features for the CLI ? (e.g. `git bug title` to edit, or `git bug title` to show the current title and `git bug title change` to change it) ?\n\n## New shinny plan\n\n#### As before\n\n- `git bug push [\u003cremote\u003e]`: push to remote\n- `git bug pull [\u003cremote\u003e]`: pull from remote\n- `git bug termui`: launch the terminal UI\n- `git bug webui [-p 1234]`: launch the web UI\n\n#### Changed\n\n- [ ] `git bug`: list bugs\n- [x] `git bug comment [\u003cid\u003e]`: show all comments\n- [x] `git bug comment add [\u003cid\u003e] [-m \"message\"]`: add comment\n- [x] `git bug label [\u003cid\u003e]`: show all labels\n- [x] `git bug label add [\u003cid\u003e] \u003clabel\u003e...`: add labels\n- [x] `git bug label rm [\u003cid\u003e] \u003clabel\u003e...`: remove labels\n\n#### Removed\n\n- [x] `git bug new`: renamed to `add`\n- [ ] `git bug ls`: removed in favor of `git bug`\n\n#### Added\n\n- [x] `git bug add [-t \"title\"] [-m \"message\"]`: new bug\n- [x] `git bug title [\u003cid\u003e]`: show the title\n- [x] `git bug title edit [\u003cid\u003e]`: edit the title\n- [ ] `git bug diff [\u003cid\u003e] [\u003cremote\u003e]`: show what bugs have been added/changed regarding the default or explicit remote. No select mechanism here, the \u003cid\u003e is a filter.\n- [x] `git bug status [\u003cid\u003e]`: show the current status\n- [x] `git bug status open [\u003cid\u003e]`: change status to open\n- [x] `git bug status close [\u003cid\u003e]`: change status to closed\n- [ ] `git bug reset \u003cid\u003e [\u003cremote\u003e]`: clear the changes of a bug to match the bug of a remote\n- [ ] `git bug rm \u003cid\u003e [\u003cremote\u003e]`: remove a bug locally or on a remote \n\n\n## select mechanism\n\n- [x] `git bug select \u003cid\u003e`: select a bug for implicit editing later\n- [ ] using a command with an explicit id discard the selected id\n- [ ] automatic select with `new/add` ?\n- ~instead of an id, a filter could be used (e.g.: `git select \"UX refinement\"`), and it would work if only one bug match.~ Actually no, it's weird to craft a query that would only give one result\n- [x] should display a summary of the selected bug when successfully selecting to avoid mistakes\n- there is still a potential conflict when a command has both an id and arbitrary args (e.g. `git bug label add`). That will require a test to see if the first arg could be a bug id or a prefix to a bug id. There is really unlikely case where it could be a problem though: `git bug label add cafe` when we have a bug with an id starting with `cafe`.\n\nWhat do you all think ?","files":null}]}