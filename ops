{"author":{"id":"3998add589f6a09cf4bdf0e85e5481d2c48b8a757edd699a79a0c929ab5005db"},"ops":[{"type":3,"timestamp":1538516854,"nonce":"jJuKoUfYgwdGoZHVT2RvX/UoV8I=","metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQyNjQ0MTk0NQ==","github-url":"https://github.com/git-bug/git-bug/issues/7#issuecomment-426441945"},"message":"Awesome feedback, thanks!\n\n\u003e     1. I noticed that `git-bug` already exists as a command on my system. It's part of the [git-extras](https://github.com/tj/git-extras) package shipped in Debian, and is a rather [silly alias](https://github.com/tj/git-extras/blob/master/bin/git-bug)\n\nYeah, that's annoying. I've been pondering on renaming the binary to something like `gb` and leave the git porcelain world. Really not sure here. I would [make the git people happy though](https://git.github.io/rev_news/2018/09/19/edition-43/).\n\n\u003e     2. the setup is a little unintuitive. here's my first try:\n\u003e        ```\n\u003e        $ ~/go//bin/git-bug bridge configure \n\u003e        Building bug cache... Done.\n\u003e        target (github): \u003cHIT ENTER\u003e\n\u003e        invalid target\n\u003e        target (github): ^C\n\u003e        ```\n\u003e        Now I may be a little dumb, but I didn't immediately figure out that the word in parenthesis was what I was supposed to write there (and not, as I expected, a default value that would get accepted when I hit enter). When I figured that out, it was more streamlined...\n\nGood point. I thought it would be intuitive once more bridge are added (the prompt would be `target (github,gitlab):`. But I think I should change the prompt entirely and do something like:\n```\ntarget:\n[1]: github\n[2]: gitlab\n```\n\n\u003e     3. ... but then, what do you do with my passphrase?\n\u003e        ```\n\u003e        Github project URL: https://github.com/linkchecker/linkchecker/\n\u003e        username: anarcat\n\u003e        password: \n\u003e        two-factor authentication code\n\u003e        ```\n\u003e        it does says above that \"git-bug will generate an access token in your Github profile.\" but it would be better to explicitly state that the password is not written on disk (which, hopefully, it isn't).\n\nIt's not stored. Agree on that, more explanation is needed.\n\n\u003e     4. then I went into a dance of trying to figure out the right `pull` incantation. my first attempt failed because of an unrelated error message, which sent me down seeking the magical command:\n\u003e        ```\n\u003e        [1020]anarcat@curie:linkchecker$ ~/go//bin/git-bug bridge pull\n\u003e        import issue: contribution guidelines and FAQ\n\u003e        Error: no diff\n\u003e        Usage:\n\u003e          git-bug bridge pull [\u003cname\u003e] [flags]\n\u003e        \n\u003e        Flags:\n\u003e          -h, --help   help for pull\n\u003e        \n\u003e        [1020]anarcat@curie:linkchecker$ ~/go//bin/git-bug bridge pull default\n\u003e        Error: bad bridge fullname: default\n\u003e        Usage:\n\u003e          git-bug bridge pull [\u003cname\u003e] [flags]\n\u003e        \n\u003e        Flags:\n\u003e          -h, --help   help for pull\n\u003e        \n\u003e        [1021]anarcat@curie:linkchecker1$ ~/go//bin/git-bug bridge pull github\n\u003e        Error: bad bridge fullname: github\n\u003e        Usage:\n\u003e          git-bug bridge pull [\u003cname\u003e] [flags]\n\u003e        \n\u003e        Flags:\n\u003e          -h, --help   help for pull\n\u003e        \n\u003e        [1027]anarcat@curie:linkchecker130$ ~/go//bin/git-bug bridge \n\u003e        github.default\n\u003e        [1028]anarcat@curie:linkchecker$ ~/go//bin/git-bug bridge pull github.default\n\u003e        ```\n\u003e        Phew! I'm not sure what to do about this. Maybe the problem is the first error shouldn't show the usage: I _did_ call the command correctly and only got confused because I was shown the usage and thought I had to specify (and therefore guess) the right target name.\n\n`Error: no diff` should not happen. The [github documentation](https://developer.github.com/v4/object/usercontentedit/) on this query is full of holes, you must have hit a special case I didn't covered properly.\n\n\u003e     5. it does not seem to actually work:\n\u003e        ```\n\u003e        [1034]anarcat@curie:linkchecker$ ~/go//bin/git-bug ls\n\u003e        [1035]anarcat@curie:linkchecker$ \n\u003e        ```\n\u003e        Trust me, [linkcheck](https://github.com/linkchecker/linkchecker/) has [plenty of issues](https://github.com/linkchecker/linkchecker/issues). :) I _wish_ that was right we had zero issues left, but unfortunately it is more likely not syncing the issues back down...\n\nI'll give a try with this repo. Hopefully I can hit the same bug.","files":null}]}