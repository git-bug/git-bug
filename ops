{"author":{"id":"5c7555840cd67ccf0f18c17257b6b058dd241a2473ec41182ade67572c163103"},"ops":[{"type":3,"timestamp":1647713298,"nonce":"y+pKuN3AmCEFM3Nm6rXCKtjtmzE=","metadata":{"github-id":"IC_kwDOCGKeh84_9Ycw","github-url":"https://github.com/git-bug/git-bug/issues/749#issuecomment-1073055536"},"message":"\u003e Regarding the github bridge: The Github API is quite fragile and we are trying to keep up with its repeatedly changing quirks.\n\n\u003e  My main headaches with the importer are (1) the fragility and changing error-behaviour of the GitHub GraphQL API\n\nThank you for explaining this.\n\nPersonally, I much prefer the sort of workflow the Linux kernel uses, where inter-developer communication uses simple protocols and the developers themselves select the complex tools that suit them best.\n\nWhenever I bring this up in discussions, people always come back with \"But GitHub has a usable and reliable API that you can use if you want that!\"  I've long suspected that this was not, in fact, true.  I appreciate your confirmation of this, as someone who has worked on a major integration project with this API.\n\nTo answer your question, no, I really don't know how to make GitHub's API more reliable.  But I would add several levels of debugging output so I can see what's failing.  Including: (1) a \"here's what I'm doing\" log and (2) a wire-protocol dump.","files":null},{"type":6,"timestamp":1647714392,"nonce":"3s32eYfbvOj4wDX4QfkOVX6dGjE=","metadata":{"github-id":"UCE_lALOCGKeh84_9YcwziHH5sI"},"target":"8e9f02ebe88ebb75b2bae1086f20ba07e7b14411cee4b0d96f4eb20549633213","message":"\u003e Regarding the github bridge: The Github API is quite fragile and we are trying to keep up with its repeatedly changing quirks.\n\n\u003e  My main headaches with the importer are (1) the fragility and changing error-behaviour of the GitHub GraphQL API\n\nThank you for explaining this.\n\nPersonally, I much prefer the sort of workflow the Linux kernel uses, where inter-developer communication uses simple protocols and the developers themselves select the complex tools that suit them best.\n\nWhenever I bring this up in discussions, people always come back with \"But GitHub has a usable and reliable API that you can use if you want that!\"  I've long suspected that this was not, in fact, true.  I appreciate your confirmation of this, as someone who has worked on a major integration project with this API.\n\n\u003e How could we get closer to that really good importer?\n\nTo answer your question, no, I really don't know how to make GitHub's API more reliable.  But I would add several levels of debugging output so I can see what's failing.  Including: (1) a \"here's what I'm doing\" log and (2) a wire-protocol dump.","files":null},{"type":6,"timestamp":1647714439,"nonce":"EsPzVI7TZ4ZfgzRIFca11nZ98GY=","metadata":{"github-id":"UCE_lALOCGKeh84_9YcwziHH5xE"},"target":"8e9f02ebe88ebb75b2bae1086f20ba07e7b14411cee4b0d96f4eb20549633213","message":"\u003e Regarding the github bridge: The Github API is quite fragile and we are trying to keep up with its repeatedly changing quirks.\n\n\u003e  My main headaches with the importer are (1) the fragility and changing error-behaviour of the GitHub GraphQL API\n\nThank you for explaining this.\n\nPersonally, I much prefer the sort of workflow the Linux kernel uses, where inter-developer communication uses simple protocols and the developers themselves select the complex tools that suit them best.\n\nWhenever I bring this up in discussions, people always come back with \"But GitHub has a usable and reliable API that you can use if you want that!\"  I've long suspected that this was not, in fact, true.  I appreciate your confirmation of this, as someone who has worked on a major integration project with this API.\n\n\u003e How could we get closer to that really good importer?\n\nMainly I would add several levels of debugging output so I can see what's failing, including: (1) a \"here's what I'm doing\" log and (2) a wire-protocol dump.","files":null},{"type":6,"timestamp":1647714460,"nonce":"pdwjXlPOAUzG0kJ3ASl6yqzaQ2c=","metadata":{"github-id":"UCE_lALOCGKeh84_9YcwziHH50Q"},"target":"8e9f02ebe88ebb75b2bae1086f20ba07e7b14411cee4b0d96f4eb20549633213","message":"\u003e Regarding the github bridge: The Github API is quite fragile and we are trying to keep up with its repeatedly changing quirks.\n\n\u003e  My main headaches with the importer are (1) the fragility and changing error-behaviour of the GitHub GraphQL API\n\nThank you for explaining this.\n\nPersonally, I much prefer the sort of workflow the Linux kernel uses, where inter-developer communication uses simple protocols and the developers themselves select the complex tools that suit them best.\n\nWhenever I bring this up in discussions, people always come back with \"But GitHub has a usable and reliable API that you can use if you want that!\"  I've long suspected that this was not, in fact, true.  I appreciate your confirmation of this, as someone who has worked on a major integration project with this API.\n\n\u003e How could we get closer to that really good importer?\n\nMainly I would add several levels of debugging output so I can see what's failing, including: (1) a \"here's what I'm doing\" log and (2) a wire-protocol dump (interleaved with (1))","files":null}]}