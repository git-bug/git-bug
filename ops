{"author":{"id":"3998add589f6a09cf4bdf0e85e5481d2c48b8a757edd699a79a0c929ab5005db"},"ops":[{"type":3,"timestamp":1536664552,"nonce":"cjXzP09hrDKlDjWXFgLs6OFubKc=","metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQyMDIzNzgzNg==","github-url":"https://github.com/git-bug/git-bug/issues/31#issuecomment-420237836"},"message":"From what I gather from [this](https://storage.googleapis.com/gerrit-talks/summit/2015/NoteDB.pdf), it's generally the same idea with some differences. The slides are a bit light in details so it's more an educated guess.\n\nBoth git-bug and NoteDb store data in a (linear for git-but, not sure for NoteDb) chain of commit accessible through a ref, don't pollute the normal code workflow and rely on git for storing/transport of the data.\n\nHowever, NoteDb **seems** to store data as key/value pairs in commit message. git-bug goes [further than that](https://github.com/MichaelMure/git-bug/blob/master/doc/model.md) and store arbitrary data in git Blob and Tree, and tie them in a chain of commits. This gives the sames guarantees but allow for a more flexible format. As an example, git-bug can store files for the embedded media  in comments and have them managed by git as well. This data model also helps to implement the conflict-free merge.\n\nI don't think that Gerrit needs to have that flexibility or merging data, so I'd say it's good enough for them.","files":null}]}