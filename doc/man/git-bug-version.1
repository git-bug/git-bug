.nh
.TH "GIT-BUG" "1" "Apr 2019" "Generated from git-bug's source code" ""

.SH NAME
git-bug-version - Print version information


.SH SYNOPSIS
\fBgit-bug version [flags]\fP


.SH DESCRIPTION
Print version information.

.PP
Format:
  git-bug  [commit[/dirty]]   

.PP
Format Description:
   may be one of:
  	- A semantic version string, prefixed with a "v", e.g. v1.2.3
  	- "undefined" (if not provided, or built with an invalid version string)

.PP
[commit], if present, is the commit hash that was checked out during the
  build. This may be suffixed with '/dirty' if there were local file
  modifications. This is indicative of your build being patched, or modified in
  some way from the commit.

.PP
 is the version of the go compiler used for the build.

.PP
 is the target platform (GOOS).

.PP
 is the target architecture (GOARCH).


.SH OPTIONS
\fB-h\fP, \fB--help\fP[=false]
	help for version


.SH EXAMPLE
.EX
git bug version
.EE


.SH SEE ALSO
\fBgit-bug(1)\fP
