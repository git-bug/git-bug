.nh
.TH "GIT-BUG" "1" "Apr 2019" "Generated from git-bug's source code" ""

.SH NAME
git-bug-bug - List bugs


.SH SYNOPSIS
\fBgit-bug bug [QUERY] [flags]\fP


.SH DESCRIPTION
Display a summary of each bugs.

.PP
You can pass an additional query to filter and order the list. This query can be expressed either with a simple query language, flags, a natural language full text search, or a combination of the aforementioned.


.SH OPTIONS
\fB-s\fP, \fB--status\fP=[]
	Filter by status. Valid values are [open,closed]

.PP
\fB-a\fP, \fB--author\fP=[]
	Filter by author

.PP
\fB-m\fP, \fB--metadata\fP=[]
	Filter by metadata. Example: github-url=URL

.PP
\fB-p\fP, \fB--participant\fP=[]
	Filter by participant

.PP
\fB-A\fP, \fB--actor\fP=[]
	Filter by actor

.PP
\fB-l\fP, \fB--label\fP=[]
	Filter by label

.PP
\fB-t\fP, \fB--title\fP=[]
	Filter by title

.PP
\fB-n\fP, \fB--no\fP=[]
	Filter by absence of something. Valid values are [label]

.PP
\fB-b\fP, \fB--by\fP="creation"
	Sort the results by a characteristic. Valid values are [id,creation,edit]

.PP
\fB-d\fP, \fB--direction\fP="asc"
	Select the sorting direction. Valid values are [asc,desc]

.PP
\fB-f\fP, \fB--format\fP="default"
	Select the output formatting style. Valid values are [default,plain,id,json,org-mode]

.PP
\fB-h\fP, \fB--help\fP[=false]
	help for bug


.SH EXAMPLE
.EX
List open bugs sorted by last edition with a query:
git bug status:open sort:edit-desc

List closed bugs sorted by creation with flags:
git bug --status closed --by creation

Do a full text search of all bugs:
git bug "foo bar" baz

Use queries, flags, and full text search:
git bug status:open --by creation "foo bar" baz

.EE


.SH SEE ALSO
\fBgit-bug(1)\fP, \fBgit-bug-bug-comment(1)\fP, \fBgit-bug-bug-deselect(1)\fP, \fBgit-bug-bug-label(1)\fP, \fBgit-bug-bug-new(1)\fP, \fBgit-bug-bug-rm(1)\fP, \fBgit-bug-bug-select(1)\fP, \fBgit-bug-bug-show(1)\fP, \fBgit-bug-bug-status(1)\fP, \fBgit-bug-bug-title(1)\fP
